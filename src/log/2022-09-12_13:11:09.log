[2022-09-12T13:11:09.515674+0800]-[INFO] train_recursion.py-main-56: log_text: none
[2022-09-12T13:14:52.561652+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 0, loss-ave: 4.321979710341361, mAcc: 0.06515941020060963
[2022-09-12T13:18:21.613930+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 1, loss-ave: 1.2919723137191057, mAcc: 0.49967518358454377
[2022-09-12T13:21:51.133266+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 2, loss-ave: 0.7652446463973083, mAcc: 0.7212328435711912
[2022-09-12T13:25:20.606656+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 3, loss-ave: 0.5190368350770069, mAcc: 0.8197956966148817
[2022-09-12T13:28:49.424862+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 4, loss-ave: 0.400838274081046, mAcc: 0.8625411727798544
[2022-09-12T13:32:18.409168+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 5, loss-ave: 0.34243081971895395, mAcc: 0.8836048788542351
[2022-09-12T13:32:18.410015+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T13:32:18.441567+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T13:32:18.441654+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T13:32:18.441760+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '-', '[num2]'], expr_str='[num1]-[num2]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]', '/', '[num0]'], expr_str='[num5]*[num2]/[num0]')]
[2022-09-12T13:32:18.441810+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T13:32:18.441873+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 120
[2022-09-12T13:32:18.441913+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T13:32:18.457313+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T13:32:18.457425+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T13:32:18.457524+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T13:32:18.457573+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T13:32:18.457614+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T13:32:18.457653+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T13:32:18.484943+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T13:32:18.485040+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T13:32:18.485128+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T13:32:18.485176+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T13:32:18.485218+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T13:32:18.485257+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T13:32:18.513403+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T13:32:18.513501+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T13:32:18.513591+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num5]', '/', '[num1]'], expr_str='[num0]*[num5]/[num1]')]
[2022-09-12T13:32:18.513650+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T13:32:18.513694+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 13.49999999999999937549954864
[2022-09-12T13:32:18.513733+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T13:32:18.542672+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T13:32:18.542768+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T13:32:18.542848+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]', '-', '[num1]'], expr_str='[num6]/[num3]-[num1]')]
[2022-09-12T13:32:18.542895+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T13:32:18.542944+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -4
[2022-09-12T13:32:18.542984+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T13:32:18.598570+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T13:32:18.598676+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T13:32:18.598740+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num4]', '/', '[num5]', '/', '[num1]'], expr_str='[num4]/[num5]/[num1]'), OpList(arg0=7, expr_toks=['[num3]', '*', '[num6]'], expr_str='[num3]*[num6]')]
[2022-09-12T13:32:18.598795+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T13:32:18.598836+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 1.570000000000000062172489379
[2022-09-12T13:32:18.598875+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T13:32:18.625246+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T13:32:18.625344+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T13:32:18.625441+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T13:32:18.625499+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T13:32:18.625546+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T13:32:18.625585+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T13:32:18.640404+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T13:32:18.640505+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T13:32:18.640584+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T13:32:18.640632+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T13:32:18.640675+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T13:32:18.640716+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T13:32:18.685230+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T13:32:18.685336+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T13:32:18.685422+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T13:32:18.685474+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T13:32:18.685518+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T13:32:18.685559+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T13:32:18.716525+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T13:32:18.716621+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T13:32:18.716703+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '-', '[num2]', '*', '[num0]'], expr_str='[num1]-[num2]*[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]', '-', '[num2]'], expr_str='[num5]/[num0]-[num2]')]
[2022-09-12T13:32:18.716756+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T13:32:18.716798+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -5
[2022-09-12T13:32:18.716837+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T13:32:18.745615+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T13:32:18.745718+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T13:32:18.745805+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num2]', '-', '[num1]'], expr_str='[num5]/[num2]-[num1]')]
[2022-09-12T13:32:18.745862+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T13:32:18.745906+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 19.00000000000000092518585385
[2022-09-12T13:32:18.745947+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T13:32:18.773784+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T13:32:18.773880+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T13:32:18.773963+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '+', '[num4]', '*', '[num0]'], expr_str='[num0]+[num4]*[num0]')]
[2022-09-12T13:32:18.774010+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T13:32:18.774051+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T13:32:18.774089+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T13:32:18.801874+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T13:32:18.801979+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T13:32:18.802041+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num2]', '*', '[num3]', '+', '[num2]', '*', '[num3]', '+', '[num2]', '*', '[num3]', '+', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num2]*[num3]+[num2]*[num3]+[num2]*[num3]+[num5]')]
[2022-09-12T13:32:18.802089+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T13:32:18.802129+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 735
[2022-09-12T13:32:18.802168+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T13:32:18.828000+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T13:32:18.828098+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T13:32:18.828185+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]')]
[2022-09-12T13:32:18.828230+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T13:32:18.828279+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.6296296296296296296296296296
[2022-09-12T13:32:18.828319+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T13:32:18.857789+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T13:32:18.857886+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T13:32:18.857974+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]'], expr_str='[num1]/[num5]')]
[2022-09-12T13:32:18.858028+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T13:32:18.858070+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -59.99999999999999333866185225
[2022-09-12T13:32:18.858109+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T13:32:18.884587+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T13:32:18.884683+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T13:32:18.884784+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num3]', '/', '[num0]'], expr_str='[num3]/[num0]')]
[2022-09-12T13:32:18.884832+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T13:32:18.884875+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.000000000000000333066907388
[2022-09-12T13:32:18.884916+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T13:32:18.901378+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T13:32:18.901474+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T13:32:18.901562+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '/', '[num1]', '/', '[num0]', '/', '[num2]'], expr_str='[num0]/[num1]/[num0]/[num2]')]
[2022-09-12T13:32:18.901609+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T13:32:18.901650+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.002
[2022-09-12T13:32:18.901689+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T13:32:18.951456+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T13:32:18.951557+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T13:32:18.951627+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]'], expr_str='[num0]*[num1]+[num0]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '+', '[num4]'], expr_str='[num9]*[num5]+[num4]'), OpList(arg0=11, expr_toks=['[num10]', '*', '[num3]'], expr_str='[num10]*[num3]')]
[2022-09-12T13:32:18.951678+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T13:32:18.951720+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 672.0
[2022-09-12T13:32:18.951759+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T13:32:18.984912+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T13:32:18.985009+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T13:32:18.985089+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]', '/', '[num1]', '*', '[num2]', '/', '[num2]'], expr_str='[num5]*[num2]/[num1]*[num2]/[num2]')]
[2022-09-12T13:32:18.985137+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T13:32:18.985178+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.078125
[2022-09-12T13:32:18.985218+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T13:32:19.011748+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T13:32:19.011845+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T13:32:19.011930+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T13:32:19.011976+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T13:32:19.012017+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T13:32:19.012056+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T13:32:43.512218+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 5 val_acc: 0.666
[2022-09-12T13:36:10.004343+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 6, loss-ave: 0.2839688288740518, mAcc: 0.9035855517921034
[2022-09-12T13:39:38.498816+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 7, loss-ave: 0.24017724487863293, mAcc: 0.9179813494320811
[2022-09-12T13:43:06.735827+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 8, loss-ave: 0.20759195247429696, mAcc: 0.9294551226636563
[2022-09-12T13:46:36.126354+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 9, loss-ave: 0.17823610964100067, mAcc: 0.9390270001621452
[2022-09-12T13:50:02.363434+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 10, loss-ave: 0.16019514939656973, mAcc: 0.9456011162768202
[2022-09-12T13:50:02.363971+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T13:50:02.378743+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T13:50:02.378848+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T13:50:02.378906+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num2]', '*', '[num0]'], expr_str='[num2]*[num0]')]
[2022-09-12T13:50:02.378964+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T13:50:02.379003+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 80
[2022-09-12T13:50:02.379038+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T13:50:02.394077+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T13:50:02.394173+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T13:50:02.394240+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T13:50:02.394299+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T13:50:02.394336+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T13:50:02.394369+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T13:50:02.421883+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T13:50:02.421981+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T13:50:02.422051+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T13:50:02.422109+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T13:50:02.422145+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T13:50:02.422179+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T13:50:02.450230+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T13:50:02.450327+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T13:50:02.450395+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T13:50:02.450455+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T13:50:02.450493+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T13:50:02.450528+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T13:50:02.477673+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T13:50:02.477768+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T13:50:02.477838+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T13:50:02.477896+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T13:50:02.477933+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T13:50:02.477968+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T13:50:02.510813+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T13:50:02.510914+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T13:50:02.510989+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T13:50:02.511048+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T13:50:02.511085+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T13:50:02.511119+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T13:50:02.537217+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T13:50:02.537314+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T13:50:02.537388+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T13:50:02.537445+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T13:50:02.537482+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T13:50:02.537516+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T13:50:02.552164+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T13:50:02.552265+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T13:50:02.552329+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T13:50:02.552401+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T13:50:02.552438+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T13:50:02.552472+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T13:50:02.596371+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T13:50:02.596476+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T13:50:02.596528+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num1]'], expr_str='[num3]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T13:50:02.596571+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T13:50:02.596629+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 183.0508474576271207107857511
[2022-09-12T13:50:02.596664+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T13:50:02.612161+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T13:50:02.612265+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T13:50:02.612356+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T13:50:02.612399+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T13:50:02.612436+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T13:50:02.612469+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T13:50:02.655034+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T13:50:02.655128+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T13:50:02.655201+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '/', '[num2]', '-', '[num3]'], expr_str='[num0]/[num2]-[num3]'), OpList(arg0=6, expr_toks=['[num0]', '/', '[num2]'], expr_str='[num0]/[num2]'), OpList(arg0=7, expr_toks=['[num5]', '*', '[num6]'], expr_str='[num5]*[num6]')]
[2022-09-12T13:50:02.655260+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T13:50:02.655298+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 210.0000000000000160982338570
[2022-09-12T13:50:02.655332+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T13:50:02.682878+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T13:50:02.682973+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T13:50:02.683045+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T13:50:02.683102+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T13:50:02.683139+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T13:50:02.683173+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T13:50:02.702521+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T13:50:02.702616+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T13:50:02.702687+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T13:50:02.702759+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T13:50:02.702798+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T13:50:02.702832+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T13:50:02.717458+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T13:50:02.717553+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T13:50:02.717626+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T13:50:02.717683+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T13:50:02.717719+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T13:50:02.717753+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T13:50:02.774296+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T13:50:02.774392+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T13:50:02.774463+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num5]', '*', '[num6]'], expr_str='[num5]*[num6]'), OpList(arg0=8, expr_toks=['[num1]', '/', '[num7]'], expr_str='[num1]/[num7]')]
[2022-09-12T13:50:02.774523+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T13:50:02.774560+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 214.2857142857143298966305718
[2022-09-12T13:50:02.774595+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T13:50:02.814147+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T13:50:02.814242+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T13:50:02.814316+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]'], expr_str='[num3]*[num4]')]
[2022-09-12T13:50:02.814373+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T13:50:02.814410+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.6944444444444444598642086754
[2022-09-12T13:50:02.814443+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T13:50:02.844054+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T13:50:02.844148+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T13:50:02.844217+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T13:50:02.844286+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T13:50:02.844324+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T13:50:02.844359+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T13:50:02.879021+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T13:50:02.879123+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T13:50:02.879175+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]-[num4]'), OpList(arg0=10, expr_toks=['[num9]', '/', '[num5]'], expr_str='[num9]/[num5]')]
[2022-09-12T13:50:02.879234+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T13:50:02.879272+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 30.0
[2022-09-12T13:50:02.879307+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T13:50:02.909118+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T13:50:02.909213+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T13:50:02.909300+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num1]', '*', '[num2]', '/', '[num5]'], expr_str='[num1]*[num2]/[num5]')]
[2022-09-12T13:50:02.909343+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T13:50:02.909381+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 8E+1
[2022-09-12T13:50:02.909415+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T13:50:02.935933+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T13:50:02.936029+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T13:50:02.936092+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T13:50:02.936161+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T13:50:02.936198+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T13:50:02.936241+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T13:50:26.142859+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 10 val_acc: 0.762
[2022-09-12T13:53:55.098800+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 11, loss-ave: 0.14496286234008116, mAcc: 0.9509233917139928
[2022-09-12T13:57:22.949108+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 12, loss-ave: 0.1221586658461322, mAcc: 0.9585148303087008
[2022-09-12T14:00:51.200734+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 13, loss-ave: 0.11579904285417567, mAcc: 0.9603102616024362
[2022-09-12T14:04:20.051319+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 14, loss-ave: 0.0982440804188486, mAcc: 0.9663575042886424
[2022-09-12T14:07:48.599724+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 15, loss-ave: 0.08993270207324237, mAcc: 0.9689443279259472
[2022-09-12T14:07:48.600219+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T14:07:48.615000+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T14:07:48.615101+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T14:07:48.615161+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T14:07:48.615218+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T14:07:48.615257+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T14:07:48.615291+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T14:07:48.630265+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T14:07:48.630360+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T14:07:48.630429+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T14:07:48.630490+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T14:07:48.630527+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T14:07:48.630561+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T14:07:48.657679+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T14:07:48.657773+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T14:07:48.657847+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T14:07:48.657905+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T14:07:48.657942+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T14:07:48.657976+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T14:07:48.685774+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T14:07:48.685868+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T14:07:48.685950+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T14:07:48.686012+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T14:07:48.686049+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T14:07:48.686086+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T14:07:48.713088+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T14:07:48.713180+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T14:07:48.713274+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T14:07:48.713318+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T14:07:48.713354+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T14:07:48.713388+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T14:07:48.745924+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T14:07:48.746017+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T14:07:48.746086+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T14:07:48.746150+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T14:07:48.746187+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T14:07:48.746222+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T14:07:48.772261+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T14:07:48.772353+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T14:07:48.772424+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T14:07:48.772481+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T14:07:48.772517+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T14:07:48.772550+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T14:07:48.786900+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T14:07:48.786993+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T14:07:48.787053+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T14:07:48.787123+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T14:07:48.787159+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T14:07:48.787192+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T14:07:48.831013+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T14:07:48.831106+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T14:07:48.831179+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T14:07:48.831240+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T14:07:48.831278+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T14:07:48.831312+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T14:07:48.846641+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T14:07:48.846732+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T14:07:48.846794+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T14:07:48.846865+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T14:07:48.846901+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T14:07:48.846934+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T14:07:48.889269+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T14:07:48.889362+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T14:07:48.889444+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T14:07:48.889510+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T14:07:48.889572+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 1.124999999999999973979147861
[2022-09-12T14:07:48.889612+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T14:07:48.916889+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T14:07:48.916982+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T14:07:48.917056+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T14:07:48.917113+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T14:07:48.917149+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T14:07:48.917183+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T14:07:48.936458+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T14:07:48.936550+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T14:07:48.936621+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T14:07:48.936686+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T14:07:48.936723+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T14:07:48.936756+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T14:07:48.951052+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T14:07:48.951144+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T14:07:48.951204+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T14:07:48.951274+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T14:07:48.951310+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T14:07:48.951343+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T14:07:48.982025+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T14:07:48.982118+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T14:07:48.982189+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T14:07:48.982256+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T14:07:48.982299+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T14:07:48.982335+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T14:07:48.996899+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T14:07:48.996992+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T14:07:48.997054+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T14:07:48.997108+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T14:07:48.997159+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.6666666666666666851703837438
[2022-09-12T14:07:48.997193+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T14:07:49.023441+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T14:07:49.023534+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T14:07:49.023598+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]'], expr_str='[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]'], expr_str='[num3]/[num5]')]
[2022-09-12T14:07:49.023669+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T14:07:49.023706+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.4800000000000000000000000001
[2022-09-12T14:07:49.023740+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T14:07:49.040099+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T14:07:49.040192+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T14:07:49.040257+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '*', '[num6]'], expr_str='[num0]*[num1]*[num6]')]
[2022-09-12T14:07:49.040301+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T14:07:49.040355+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T14:07:49.040389+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T14:07:49.069893+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T14:07:49.069986+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T14:07:49.070062+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num1]', '*', '[num2]', '/', '[num5]'], expr_str='[num1]*[num2]/[num5]')]
[2022-09-12T14:07:49.070127+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T14:07:49.070165+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 8E+1
[2022-09-12T14:07:49.070199+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T14:07:49.096479+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T14:07:49.096572+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T14:07:49.096634+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T14:07:49.096703+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T14:07:49.096738+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T14:07:49.096771+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T14:08:10.948787+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 15 val_acc: 0.775
[2022-09-12T14:11:38.288144+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 16, loss-ave: 0.048167046851105316, mAcc: 0.9832323327821945
[2022-09-12T14:15:06.559118+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 17, loss-ave: 0.033011421390148454, mAcc: 0.988674441700808
[2022-09-12T14:18:34.784900+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 18, loss-ave: 0.03328502221215375, mAcc: 0.9885689273207626
[2022-09-12T14:22:03.717007+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 19, loss-ave: 0.03233396812940575, mAcc: 0.9892428929194647
[2022-09-12T14:25:25.883812+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 20, loss-ave: 0.02687920907076065, mAcc: 0.9910082115163011
[2022-09-12T14:25:25.884351+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T14:25:25.917742+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T14:25:25.917830+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T14:25:25.917892+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T14:25:25.917933+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T14:25:25.917976+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 17600
[2022-09-12T14:25:25.918013+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T14:25:25.935642+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T14:25:25.935742+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T14:25:25.935793+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T14:25:25.935834+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T14:25:25.935881+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T14:25:25.935917+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T14:25:25.967838+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T14:25:25.967936+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T14:25:25.967987+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T14:25:25.968029+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T14:25:25.968067+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T14:25:25.968102+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T14:25:26.001319+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T14:25:26.001415+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T14:25:26.001466+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T14:25:26.001509+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T14:25:26.001547+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T14:25:26.001583+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T14:25:26.033476+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T14:25:26.033571+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T14:25:26.033622+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T14:25:26.033664+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T14:25:26.033701+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T14:25:26.033736+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T14:25:26.072169+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T14:25:26.072269+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T14:25:26.072321+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T14:25:26.072378+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T14:25:26.072450+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 307.7200000000000121858079183
[2022-09-12T14:25:26.072485+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T14:25:26.103214+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T14:25:26.103312+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T14:25:26.103362+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T14:25:26.103402+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T14:25:26.103439+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T14:25:26.103474+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T14:25:26.120551+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T14:25:26.120650+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T14:25:26.120698+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T14:25:26.120737+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T14:25:26.120774+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T14:25:26.120809+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T14:25:26.172660+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T14:25:26.172740+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T14:25:26.172792+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T14:25:26.172835+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T14:25:26.172874+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T14:25:26.172909+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T14:25:26.190968+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T14:25:26.191068+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T14:25:26.191126+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T14:25:26.191169+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T14:25:26.191206+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T14:25:26.191242+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T14:25:26.224977+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T14:25:26.225071+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T14:25:26.225122+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num2]', '-', '[num1]'], expr_str='[num5]/[num2]-[num1]')]
[2022-09-12T14:25:26.225166+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T14:25:26.225204+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 19.00000000000000092518585385
[2022-09-12T14:25:26.225241+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T14:25:26.257882+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T14:25:26.257979+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T14:25:26.258029+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T14:25:26.258069+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T14:25:26.258107+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T14:25:26.258143+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T14:25:26.281008+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T14:25:26.281099+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T14:25:26.281150+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T14:25:26.281194+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T14:25:26.281233+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T14:25:26.281268+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T14:25:26.298291+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T14:25:26.298392+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T14:25:26.298446+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T14:25:26.298487+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T14:25:26.298552+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T14:25:26.298587+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T14:25:26.343035+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T14:25:26.343225+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T14:25:26.343314+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T14:25:26.343384+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T14:25:26.343446+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T14:25:26.343502+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T14:25:26.379733+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T14:25:26.379876+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T14:25:26.379958+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]'), OpList(arg0=4, expr_toks=['[num3]', '/', '[num1]'], expr_str='[num3]/[num1]')]
[2022-09-12T14:25:26.380024+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T14:25:26.380083+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.6666666666666666851703837438
[2022-09-12T14:25:26.380136+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T14:25:26.425074+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T14:25:26.425369+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T14:25:26.425557+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T14:25:26.425706+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T14:25:26.425837+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T14:25:26.425959+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T14:25:26.463035+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T14:25:26.463141+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T14:25:26.463200+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]', '-', '[num4]'], expr_str='[num0]*[num1]*[num2]-[num4]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num6]'], expr_str='[num9]*[num6]')]
[2022-09-12T14:25:26.463245+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T14:25:26.463282+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 152.0
[2022-09-12T14:25:26.463314+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T14:25:26.491619+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T14:25:26.491718+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T14:25:26.491785+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]')]
[2022-09-12T14:25:26.491834+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T14:25:26.491870+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T14:25:26.491903+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T14:25:26.517850+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T14:25:26.517945+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T14:25:26.518008+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T14:25:26.518061+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T14:25:26.518096+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T14:25:26.518128+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T14:25:49.042387+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 20 val_acc: 0.823
[2022-09-12T14:29:11.802575+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 21, loss-ave: 0.025305570214390016, mAcc: 0.991401075327009
[2022-09-12T14:32:35.611754+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 22, loss-ave: 0.024635826561140613, mAcc: 0.9920165117897282
[2022-09-12T14:35:58.279367+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 23, loss-ave: 0.02471781197924521, mAcc: 0.9916865208088707
[2022-09-12T14:39:21.322570+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 24, loss-ave: 0.023083919637171647, mAcc: 0.9925163280662647
[2022-09-12T14:42:43.856498+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 25, loss-ave: 0.02115570477402312, mAcc: 0.9928329931269484
[2022-09-12T14:42:43.856984+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T14:42:43.871219+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T14:42:43.871320+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T14:42:43.871389+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T14:42:43.871434+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T14:42:43.871476+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 880
[2022-09-12T14:42:43.871510+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T14:42:43.886052+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T14:42:43.886145+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T14:42:43.886216+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T14:42:43.886253+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T14:42:43.886288+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T14:42:43.886320+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T14:42:43.912372+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T14:42:43.912462+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T14:42:43.912535+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T14:42:43.912575+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T14:42:43.912610+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T14:42:43.912641+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T14:42:43.939733+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T14:42:43.939824+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T14:42:43.939897+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T14:42:43.939942+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T14:42:43.939978+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T14:42:43.940011+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T14:42:43.965845+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T14:42:43.965935+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T14:42:43.966008+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T14:42:43.966053+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T14:42:43.966087+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T14:42:43.966119+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T14:42:43.997587+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T14:42:43.997678+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T14:42:43.997746+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T14:42:43.997786+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T14:42:43.997822+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T14:42:43.997857+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T14:42:44.023002+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T14:42:44.023093+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T14:42:44.023155+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T14:42:44.023213+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T14:42:44.023247+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T14:42:44.023280+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T14:42:44.037137+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T14:42:44.037229+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T14:42:44.037288+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T14:42:44.037346+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T14:42:44.037380+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T14:42:44.037413+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T14:42:44.079547+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T14:42:44.079638+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T14:42:44.079707+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T14:42:44.079748+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T14:42:44.079821+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T14:42:44.079854+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T14:42:44.097451+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T14:42:44.097544+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T14:42:44.097612+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T14:42:44.097656+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T14:42:44.097692+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T14:42:44.097724+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T14:42:44.138587+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T14:42:44.138678+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T14:42:44.138749+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T14:42:44.138791+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T14:42:44.138827+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 22.49999999999999791833182883
[2022-09-12T14:42:44.138860+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T14:42:44.165319+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T14:42:44.165410+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T14:42:44.165484+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T14:42:44.165528+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T14:42:44.165565+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T14:42:44.165597+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T14:42:44.184143+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T14:42:44.184233+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T14:42:44.184309+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T14:42:44.184359+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T14:42:44.184395+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T14:42:44.184428+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T14:42:44.198296+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T14:42:44.198387+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T14:42:44.198447+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T14:42:44.198508+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T14:42:44.198543+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T14:42:44.198575+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T14:42:44.226694+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T14:42:44.226785+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T14:42:44.226857+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T14:42:44.226904+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T14:42:44.226939+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 59.99999999999999167332731532
[2022-09-12T14:42:44.226972+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T14:42:44.241127+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T14:42:44.241218+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T14:42:44.241278+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T14:42:44.241337+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T14:42:44.241377+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.6666666666666666851703837438
[2022-09-12T14:42:44.241410+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T14:42:44.266718+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T14:42:44.266808+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T14:42:44.266869+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num2]'], expr_str='[num1]/[num2]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]'], expr_str='[num3]/[num5]')]
[2022-09-12T14:42:44.266923+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T14:42:44.266958+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.8
[2022-09-12T14:42:44.266990+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T14:42:44.301575+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T14:42:44.301665+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T14:42:44.301728+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num2]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num2]-[num4]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num6]'], expr_str='[num9]*[num6]')]
[2022-09-12T14:42:44.301769+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T14:42:44.301805+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 130.00
[2022-09-12T14:42:44.301839+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T14:42:44.316813+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T14:42:44.316903+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T14:42:44.316965+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T14:42:44.317018+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T14:42:44.317054+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T14:42:44.317086+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T14:42:44.342365+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T14:42:44.342455+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T14:42:44.342523+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T14:42:44.342579+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T14:42:44.342614+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T14:42:44.342647+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T14:43:06.455315+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 25 val_acc: 0.81
[2022-09-12T14:46:29.312196+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 26, loss-ave: 0.012486276767453132, mAcc: 0.995897181025481
[2022-09-12T14:49:51.839876+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 27, loss-ave: 0.008676826032394475, mAcc: 0.9971174804312227
[2022-09-12T14:53:14.820836+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 28, loss-ave: 0.007246610359387253, mAcc: 0.9975757340231527
[2022-09-12T14:56:41.512191+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 29, loss-ave: 0.008375296431715687, mAcc: 0.997352665253925
[2022-09-12T15:00:04.644955+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 30, loss-ave: 0.007041809133344009, mAcc: 0.9977722838036851
[2022-09-12T15:00:04.645453+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T15:00:04.662731+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T15:00:04.662813+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T15:00:04.662870+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num2]', '*', '[num0]'], expr_str='[num2]*[num0]')]
[2022-09-12T15:00:04.662911+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T15:00:04.662953+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 80
[2022-09-12T15:00:04.662989+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T15:00:04.680747+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T15:00:04.680842+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T15:00:04.680892+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T15:00:04.680933+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T15:00:04.680972+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T15:00:04.681008+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T15:00:04.713092+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T15:00:04.713190+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T15:00:04.713243+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:00:04.713293+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:00:04.713332+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T15:00:04.713367+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T15:00:04.746497+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T15:00:04.746593+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T15:00:04.746644+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T15:00:04.746687+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T15:00:04.746725+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T15:00:04.746761+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T15:00:04.778839+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T15:00:04.778936+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T15:00:04.778986+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:00:04.779027+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:00:04.779065+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T15:00:04.779101+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T15:00:04.817536+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T15:00:04.817631+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T15:00:04.817681+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T15:00:04.817723+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T15:00:04.817763+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T15:00:04.817799+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T15:00:04.848506+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T15:00:04.848604+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T15:00:04.848660+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T15:00:04.848701+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T15:00:04.848739+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T15:00:04.848774+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T15:00:04.865819+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T15:00:04.865921+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T15:00:04.865969+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T15:00:04.866008+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T15:00:04.866045+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T15:00:04.866080+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T15:00:04.917919+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T15:00:04.917999+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T15:00:04.918051+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T15:00:04.918093+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T15:00:04.918132+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T15:00:04.918167+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T15:00:04.936186+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T15:00:04.936291+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T15:00:04.936343+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T15:00:04.936386+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T15:00:04.936423+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T15:00:04.936458+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T15:00:04.954365+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T15:00:04.954461+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T15:00:04.954518+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '/', '[num2]', '-', '[num1]'], expr_str='[num0]/[num2]-[num1]')]
[2022-09-12T15:00:04.954564+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T15:00:04.954603+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 9.00000000000000055511151231
[2022-09-12T15:00:04.954639+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T15:00:04.987434+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T15:00:04.987531+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T15:00:04.987580+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T15:00:04.987620+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T15:00:04.987658+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T15:00:04.987693+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T15:00:05.010583+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T15:00:05.010675+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T15:00:05.010725+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T15:00:05.010768+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T15:00:05.010807+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T15:00:05.010843+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T15:00:05.027852+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T15:00:05.027953+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T15:00:05.028001+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T15:00:05.028041+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T15:00:05.028079+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T15:00:05.028114+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T15:00:05.064511+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T15:00:05.064605+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T15:00:05.064777+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T15:00:05.064829+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T15:00:05.064869+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T15:00:05.064905+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T15:00:05.082494+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T15:00:05.082599+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T15:00:05.082647+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T15:00:05.082685+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T15:00:05.082723+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.6666666666666666851703837438
[2022-09-12T15:00:05.082758+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T15:00:05.117657+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T15:00:05.117754+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T15:00:05.117804+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T15:00:05.117844+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T15:00:05.117882+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T15:00:05.117918+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T15:00:05.146717+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T15:00:05.146795+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T15:00:05.146845+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num6]', '*', '[num2]', '*', '[num5]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num6]*[num2]*[num5]')]
[2022-09-12T15:00:05.146888+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T15:00:05.146927+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 69.0
[2022-09-12T15:00:05.146963+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T15:00:05.165421+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T15:00:05.165518+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T15:00:05.165568+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T15:00:05.165610+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T15:00:05.165648+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T15:00:05.165683+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T15:00:05.196989+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T15:00:05.197090+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T15:00:05.197139+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T15:00:05.197179+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T15:00:05.197217+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T15:00:05.197253+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T15:00:32.403425+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 30 val_acc: 0.815
[2022-09-12T15:03:57.278704+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 31, loss-ave: 0.007991928750255773, mAcc: 0.997442831631602
[2022-09-12T15:07:20.198251+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 32, loss-ave: 0.007465540940997253, mAcc: 0.9975896295227299
[2022-09-12T15:10:42.577105+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 33, loss-ave: 0.007265981997190485, mAcc: 0.9974931702717117
[2022-09-12T15:14:05.740106+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 34, loss-ave: 0.006553317969787664, mAcc: 0.9978229359599227
[2022-09-12T15:17:27.509438+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 35, loss-ave: 0.006869184696209327, mAcc: 0.9976691823143391
[2022-09-12T15:17:27.509936+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T15:17:27.524538+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T15:17:27.524639+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T15:17:27.524697+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T15:17:27.524738+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T15:17:27.524777+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T15:17:27.524812+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T15:17:27.539348+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T15:17:27.539468+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T15:17:27.539519+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T15:17:27.539570+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T15:17:27.539608+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T15:17:27.539643+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T15:17:27.565798+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T15:17:27.565891+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T15:17:27.565965+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:17:27.566004+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:17:27.566039+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T15:17:27.566071+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T15:17:27.593145+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T15:17:27.593238+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T15:17:27.593310+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T15:17:27.593355+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T15:17:27.593392+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T15:17:27.593425+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T15:17:27.619404+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T15:17:27.619496+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T15:17:27.619571+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:17:27.619617+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:17:27.619652+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T15:17:27.619686+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T15:17:27.651599+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T15:17:27.651697+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T15:17:27.651770+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T15:17:27.651815+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T15:17:27.651851+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T15:17:27.651885+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T15:17:27.677056+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T15:17:27.677147+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T15:17:27.677210+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T15:17:27.677263+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T15:17:27.677299+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T15:17:27.677332+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T15:17:27.691349+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T15:17:27.691442+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T15:17:27.691503+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T15:17:27.691560+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T15:17:27.691596+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T15:17:27.691629+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T15:17:27.734061+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T15:17:27.734153+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T15:17:27.734221+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T15:17:27.734268+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T15:17:27.734309+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T15:17:27.734344+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T15:17:27.749076+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T15:17:27.749167+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T15:17:27.749230+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T15:17:27.749284+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T15:17:27.749320+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T15:17:27.749353+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T15:17:27.790247+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T15:17:27.790340+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T15:17:27.790409+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T15:17:27.790450+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T15:17:27.790485+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T15:17:27.790518+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T15:17:27.817026+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T15:17:27.817118+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T15:17:27.817192+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T15:17:27.817233+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T15:17:27.817268+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T15:17:27.817302+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T15:17:27.835976+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T15:17:27.836069+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T15:17:27.836135+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T15:17:27.836177+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T15:17:27.836217+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T15:17:27.836257+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T15:17:27.850247+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T15:17:27.850337+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T15:17:27.850399+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T15:17:27.850453+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T15:17:27.850487+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T15:17:27.850520+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T15:17:27.880235+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T15:17:27.880352+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T15:17:27.880425+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T15:17:27.880471+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T15:17:27.880509+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T15:17:27.880544+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T15:17:27.918830+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T15:17:27.918922+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T15:17:27.918984+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]'), OpList(arg0=5, expr_toks=['[num4]', '/', '[num3]'], expr_str='[num4]/[num3]')]
[2022-09-12T15:17:27.919041+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T15:17:27.919077+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1999999999999999866773237045
[2022-09-12T15:17:27.919109+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T15:17:27.947564+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T15:17:27.947656+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T15:17:27.947719+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T15:17:27.947770+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T15:17:27.947810+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T15:17:27.947845+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T15:17:27.984093+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T15:17:27.984195+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T15:17:27.984246+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num2]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num2]-[num4]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num6]', '*', '[num5]'], expr_str='[num9]*[num6]*[num5]')]
[2022-09-12T15:17:27.984297+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T15:17:27.984333+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 260.00
[2022-09-12T15:17:27.984377+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T15:17:27.999426+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T15:17:27.999518+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T15:17:27.999591+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T15:17:27.999638+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T15:17:27.999674+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T15:17:27.999708+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T15:17:28.025255+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T15:17:28.025348+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T15:17:28.025410+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T15:17:28.025465+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T15:17:28.025500+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T15:17:28.025532+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T15:17:50.410927+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 35 val_acc: 0.829
[2022-09-12T15:21:12.718684+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 36, loss-ave: 0.004524159215338595, mAcc: 0.9984845093871713
[2022-09-12T15:24:39.352583+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 37, loss-ave: 0.0028084357615418922, mAcc: 0.9990221425514358
[2022-09-12T15:28:02.854657+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 38, loss-ave: 0.0030334357471921043, mAcc: 0.9989533862912698
[2022-09-12T15:31:25.821946+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 39, loss-ave: 0.00273073181520879, mAcc: 0.9990231780368929
[2022-09-12T15:34:50.123925+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 40, loss-ave: 0.0033525265981746086, mAcc: 0.9988455896343135
[2022-09-12T15:34:50.124425+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T15:34:50.141726+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T15:34:50.141809+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T15:34:50.141866+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T15:34:50.141906+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T15:34:50.141944+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T15:34:50.141978+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T15:34:50.159697+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T15:34:50.159792+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T15:34:50.159841+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T15:34:50.159883+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T15:34:50.159919+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T15:34:50.159952+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T15:34:50.191872+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T15:34:50.191967+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T15:34:50.192018+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:34:50.192059+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:34:50.192095+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T15:34:50.192128+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T15:34:50.225336+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T15:34:50.225428+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T15:34:50.225477+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T15:34:50.225527+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T15:34:50.225563+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T15:34:50.225596+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T15:34:50.257465+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T15:34:50.257559+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T15:34:50.257608+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:34:50.257648+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:34:50.257683+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T15:34:50.257717+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T15:34:50.296095+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T15:34:50.296188+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T15:34:50.296237+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T15:34:50.296285+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T15:34:50.296323+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T15:34:50.296356+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T15:34:50.327092+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T15:34:50.327187+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T15:34:50.327235+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T15:34:50.327275+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T15:34:50.327310+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T15:34:50.327343+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T15:34:50.344373+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T15:34:50.344469+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T15:34:50.344522+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T15:34:50.344561+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T15:34:50.344595+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T15:34:50.344627+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T15:34:50.396669+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T15:34:50.396743+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T15:34:50.396795+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T15:34:50.396837+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T15:34:50.396874+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T15:34:50.396908+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T15:34:50.414918+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T15:34:50.415014+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T15:34:50.415062+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T15:34:50.415103+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T15:34:50.415138+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T15:34:50.415170+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T15:34:50.464969+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T15:34:50.465058+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T15:34:50.465110+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T15:34:50.465153+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T15:34:50.465188+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 22.49999999999999791833182883
[2022-09-12T15:34:50.465227+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T15:34:50.497735+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T15:34:50.497830+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T15:34:50.497879+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T15:34:50.497918+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T15:34:50.497954+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T15:34:50.497986+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T15:34:50.520943+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T15:34:50.521018+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T15:34:50.521066+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T15:34:50.521109+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T15:34:50.521145+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T15:34:50.521177+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T15:34:50.538156+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T15:34:50.538252+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T15:34:50.538299+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T15:34:50.538337+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T15:34:50.538371+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T15:34:50.538403+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T15:34:50.589394+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T15:34:50.589486+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T15:34:50.589538+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num5]', '*', '[num6]'], expr_str='[num1]/[num5]*[num6]')]
[2022-09-12T15:34:50.589579+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T15:34:50.589615+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 46.66666666666667776889691292
[2022-09-12T15:34:50.589653+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T15:34:50.620595+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T15:34:50.620693+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T15:34:50.620743+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]')]
[2022-09-12T15:34:50.620782+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T15:34:50.620818+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1666666666666666574148081281
[2022-09-12T15:34:50.620850+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T15:34:50.655805+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T15:34:50.655899+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T15:34:50.655948+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T15:34:50.655987+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T15:34:50.656023+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T15:34:50.656055+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T15:34:50.680775+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T15:34:50.680850+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T15:34:50.680899+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T15:34:50.680942+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T15:34:50.680978+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T15:34:50.681011+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T15:34:50.699412+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T15:34:50.699507+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T15:34:50.699556+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T15:34:50.699603+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T15:34:50.699640+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T15:34:50.699673+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T15:34:50.730749+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T15:34:50.730847+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T15:34:50.730895+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T15:34:50.730935+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T15:34:50.730969+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T15:34:50.731002+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T15:35:17.633427+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 40 val_acc: 0.838
[2022-09-12T15:38:40.583843+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 41, loss-ave: 0.002567241520788781, mAcc: 0.998993643311387
[2022-09-12T15:42:02.502251+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 42, loss-ave: 0.0028040613847503536, mAcc: 0.9990384375575647
[2022-09-12T15:45:25.177069+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 43, loss-ave: 0.0027532049244320452, mAcc: 0.9990549470113073
[2022-09-12T15:48:48.015850+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 44, loss-ave: 0.002565196137290911, mAcc: 0.9990862411282123
[2022-09-12T15:52:12.856523+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 45, loss-ave: 0.0025527941381325277, mAcc: 0.9990879782270439
[2022-09-12T15:52:12.857066+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T15:52:12.871563+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T15:52:12.871663+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T15:52:12.871717+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T15:52:12.871756+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T15:52:12.871790+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T15:52:12.871820+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T15:52:12.886530+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T15:52:12.886624+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T15:52:12.886689+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T15:52:12.886728+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T15:52:12.886761+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T15:52:12.886799+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T15:52:12.913240+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T15:52:12.913328+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T15:52:12.913401+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:52:12.913439+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:52:12.913470+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T15:52:12.913499+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T15:52:12.940875+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T15:52:12.940964+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T15:52:12.941032+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T15:52:12.941069+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T15:52:12.941101+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T15:52:12.941130+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T15:52:12.969895+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T15:52:12.969983+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T15:52:12.970052+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:52:12.970091+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T15:52:12.970122+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T15:52:12.970152+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T15:52:13.002187+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T15:52:13.002275+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T15:52:13.002344+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T15:52:13.002384+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T15:52:13.002423+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 307.7200000000000121858079183
[2022-09-12T15:52:13.002454+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T15:52:13.027807+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T15:52:13.027895+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T15:52:13.027956+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T15:52:13.028004+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T15:52:13.028036+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T15:52:13.028066+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T15:52:13.042171+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T15:52:13.042259+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T15:52:13.042318+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T15:52:13.042370+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T15:52:13.042401+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T15:52:13.042430+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T15:52:13.088182+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T15:52:13.088351+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T15:52:13.088406+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T15:52:13.088446+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T15:52:13.088480+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T15:52:13.088511+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T15:52:13.103421+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T15:52:13.103508+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T15:52:13.103567+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T15:52:13.103625+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T15:52:13.103657+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T15:52:13.103686+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T15:52:13.145054+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T15:52:13.145142+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T15:52:13.145208+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T15:52:13.145246+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T15:52:13.145278+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T15:52:13.145308+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T15:52:13.172272+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T15:52:13.172360+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T15:52:13.172430+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T15:52:13.172466+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T15:52:13.172497+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T15:52:13.172527+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T15:52:13.191350+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T15:52:13.191438+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T15:52:13.191502+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T15:52:13.191541+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T15:52:13.191573+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T15:52:13.191602+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T15:52:13.205662+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T15:52:13.205749+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T15:52:13.205814+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T15:52:13.205864+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T15:52:13.205895+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T15:52:13.205923+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T15:52:13.236055+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T15:52:13.236143+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T15:52:13.236212+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T15:52:13.236256+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T15:52:13.236289+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T15:52:13.236320+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T15:52:13.261989+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T15:52:13.262078+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T15:52:13.262137+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]')]
[2022-09-12T15:52:13.262191+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T15:52:13.262223+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1666666666666666574148081281
[2022-09-12T15:52:13.262252+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T15:52:13.296271+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T15:52:13.296396+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T15:52:13.296455+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T15:52:13.296491+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T15:52:13.296523+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T15:52:13.296552+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T15:52:13.331724+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T15:52:13.331811+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T15:52:13.331876+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num6]'], expr_str='[num9]*[num6]')]
[2022-09-12T15:52:13.331917+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T15:52:13.331950+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T15:52:13.331980+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T15:52:13.359449+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T15:52:13.359538+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T15:52:13.359609+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]')]
[2022-09-12T15:52:13.359647+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T15:52:13.359679+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T15:52:13.359709+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T15:52:13.385601+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T15:52:13.385689+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T15:52:13.385749+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T15:52:13.385799+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T15:52:13.385831+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T15:52:13.385860+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T15:52:36.062574+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 45 val_acc: 0.834
[2022-09-12T15:56:00.586168+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 46, loss-ave: 0.001962858436831255, mAcc: 0.9992571196831521
[2022-09-12T15:59:23.553223+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 47, loss-ave: 0.0015619931249011808, mAcc: 0.9993634102146548
[2022-09-12T16:02:46.287381+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 48, loss-ave: 0.0016652669946145805, mAcc: 0.9993260825584082
[2022-09-12T16:06:09.779598+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 49, loss-ave: 0.0015545463175864894, mAcc: 0.9994141199528526
[2022-09-12T16:09:31.858140+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 50, loss-ave: 0.001449843381968567, mAcc: 0.9994162735095523
[2022-09-12T16:09:31.858964+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T16:09:31.874013+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T16:09:31.874112+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T16:09:31.874170+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T16:09:31.874208+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T16:09:31.874320+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 880
[2022-09-12T16:09:31.874354+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T16:09:31.889431+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T16:09:31.889546+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T16:09:31.889593+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T16:09:31.889630+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T16:09:31.889680+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T16:09:31.889714+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T16:09:31.916804+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T16:09:31.916895+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T16:09:31.916965+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T16:09:31.917002+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T16:09:31.917054+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T16:09:31.917088+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T16:09:31.945230+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T16:09:31.945324+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T16:09:31.945410+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T16:09:31.945453+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T16:09:31.945489+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T16:09:31.945523+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T16:09:31.972512+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T16:09:31.972636+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T16:09:31.972691+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T16:09:31.972731+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T16:09:31.972784+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T16:09:31.972820+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T16:09:32.006253+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T16:09:32.006360+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T16:09:32.006421+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T16:09:32.006460+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T16:09:32.006494+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T16:09:32.006544+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T16:09:32.037144+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T16:09:32.037294+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T16:09:32.037345+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T16:09:32.037383+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T16:09:32.037416+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T16:09:32.037465+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T16:09:32.051970+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T16:09:32.052094+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T16:09:32.052171+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T16:09:32.052211+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T16:09:32.052248+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T16:09:32.052309+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T16:09:32.096377+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T16:09:32.096479+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T16:09:32.096530+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T16:09:32.096570+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T16:09:32.096621+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T16:09:32.096656+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T16:09:32.111990+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T16:09:32.112081+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T16:09:32.112154+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T16:09:32.112212+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T16:09:32.112249+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T16:09:32.112290+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T16:09:32.159337+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T16:09:32.159432+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T16:09:32.159501+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T16:09:32.159565+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T16:09:32.159603+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 1.124999999999999973979147861
[2022-09-12T16:09:32.159637+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T16:09:32.187218+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T16:09:32.187309+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T16:09:32.187399+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T16:09:32.187447+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T16:09:32.187485+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T16:09:32.187519+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T16:09:32.207021+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T16:09:32.207113+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T16:09:32.207181+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T16:09:32.207221+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T16:09:32.207274+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T16:09:32.207307+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T16:09:32.221781+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T16:09:32.221871+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T16:09:32.221931+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T16:09:32.221999+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T16:09:32.222035+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T16:09:32.222069+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T16:09:32.254199+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T16:09:32.254291+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T16:09:32.254363+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T16:09:32.254426+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T16:09:32.254463+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 59.99999999999999167332731532
[2022-09-12T16:09:32.254497+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T16:09:32.269284+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T16:09:32.269383+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T16:09:32.269453+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T16:09:32.269491+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T16:09:32.269549+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.6666666666666666851703837438
[2022-09-12T16:09:32.269584+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T16:09:32.299614+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T16:09:32.299742+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T16:09:32.299793+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T16:09:32.299830+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T16:09:32.299864+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T16:09:32.299913+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T16:09:32.321346+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T16:09:32.321445+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T16:09:32.321504+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T16:09:32.321544+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T16:09:32.321595+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T16:09:32.321630+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T16:09:32.340489+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T16:09:32.340587+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T16:09:32.340643+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T16:09:32.340686+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T16:09:32.340741+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T16:09:32.340776+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T16:09:32.367738+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T16:09:32.367829+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T16:09:32.367907+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T16:09:32.367966+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T16:09:32.368003+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T16:09:32.368037+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T16:09:54.524877+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 50 val_acc: 0.837
[2022-09-12T16:13:15.564234+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 51, loss-ave: 0.0015805750605071454, mAcc: 0.9994056149940629
[2022-09-12T16:16:37.695041+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 52, loss-ave: 0.0014438415962026885, mAcc: 0.9994043968644813
[2022-09-12T16:20:00.793421+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 53, loss-ave: 0.0015637683051229348, mAcc: 0.9993873282890458
[2022-09-12T16:23:23.977500+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 54, loss-ave: 0.0013579717727664367, mAcc: 0.9993962524169618
[2022-09-12T16:26:47.908793+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 55, loss-ave: 0.0014187810498245753, mAcc: 0.9993767503796932
[2022-09-12T16:26:47.909639+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T16:26:47.924863+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T16:26:47.924943+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T16:26:47.925017+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T16:26:47.925075+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T16:26:47.925118+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T16:26:47.925152+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T16:26:47.940100+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T16:26:47.940193+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T16:26:47.940264+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T16:26:47.940322+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T16:26:47.940359+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T16:26:47.940393+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T16:26:47.967340+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T16:26:47.967432+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T16:26:47.967503+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T16:26:47.967570+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T16:26:47.967608+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T16:26:47.967642+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T16:26:47.995569+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T16:26:47.995662+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T16:26:47.995730+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T16:26:47.995769+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T16:26:47.995821+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T16:26:47.995855+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T16:26:48.022778+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T16:26:48.022869+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T16:26:48.022940+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T16:26:48.022978+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T16:26:48.023030+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T16:26:48.023063+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T16:26:48.055773+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T16:26:48.055864+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T16:26:48.055930+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T16:26:48.055968+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T16:26:48.056020+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T16:26:48.056054+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T16:26:48.082004+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T16:26:48.082095+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T16:26:48.082166+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T16:26:48.082255+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T16:26:48.082292+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T16:26:48.082325+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T16:26:48.096687+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T16:26:48.096778+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T16:26:48.096838+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T16:26:48.096904+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T16:26:48.096940+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T16:26:48.096973+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T16:26:48.140554+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T16:26:48.140646+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T16:26:48.140708+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T16:26:48.140747+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T16:26:48.140788+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T16:26:48.140839+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T16:26:48.156072+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T16:26:48.156163+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T16:26:48.156225+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T16:26:48.156304+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T16:26:48.156342+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T16:26:48.156376+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T16:26:48.198482+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T16:26:48.198574+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T16:26:48.198647+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T16:26:48.198708+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T16:26:48.198746+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T16:26:48.198780+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T16:26:48.226283+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T16:26:48.226374+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T16:26:48.226444+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T16:26:48.226525+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T16:26:48.226562+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T16:26:48.226596+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T16:26:48.246056+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T16:26:48.246148+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T16:26:48.246212+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T16:26:48.246259+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T16:26:48.246313+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T16:26:48.246348+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T16:26:48.260848+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T16:26:48.260938+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T16:26:48.260998+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T16:26:48.261066+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T16:26:48.261102+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T16:26:48.261136+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T16:26:48.292131+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T16:26:48.292221+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T16:26:48.292302+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T16:26:48.292421+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T16:26:48.292459+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T16:26:48.292494+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T16:26:48.331819+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T16:26:48.331911+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T16:26:48.331992+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]'), OpList(arg0=5, expr_toks=['[num4]', '/', '[num3]'], expr_str='[num4]/[num3]')]
[2022-09-12T16:26:48.332049+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T16:26:48.332086+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1999999999999999866773237045
[2022-09-12T16:26:48.332120+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T16:26:48.361716+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T16:26:48.361806+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T16:26:48.361878+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T16:26:48.361933+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T16:26:48.361970+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T16:26:48.362003+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T16:26:48.383361+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T16:26:48.383461+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T16:26:48.383510+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T16:26:48.383551+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T16:26:48.383608+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T16:26:48.383641+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T16:26:48.399219+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T16:26:48.399311+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T16:26:48.399381+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T16:26:48.399440+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T16:26:48.399477+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T16:26:48.399511+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T16:26:48.426026+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T16:26:48.426118+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T16:26:48.426179+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T16:26:48.426248+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T16:26:48.426285+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T16:26:48.426318+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T16:27:10.692889+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 55 val_acc: 0.831
[2022-09-12T16:30:33.346091+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 56, loss-ave: 0.0012187690093614307, mAcc: 0.9994480302617869
[2022-09-12T16:33:59.506754+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 57, loss-ave: 0.0012061931434945788, mAcc: 0.9994953341002069
[2022-09-12T16:37:24.975963+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 58, loss-ave: 0.0010318086647490724, mAcc: 0.9995082939144506
[2022-09-12T16:40:48.867474+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 59, loss-ave: 0.0010512672833965881, mAcc: 0.999505297586806
[2022-09-12T16:44:13.469360+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 60, loss-ave: 0.0011861040460783834, mAcc: 0.9994275402936694
[2022-09-12T16:44:13.469828+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T16:44:13.484031+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T16:44:13.484133+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T16:44:13.484189+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T16:44:13.484228+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T16:44:13.484274+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T16:44:13.484316+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T16:44:13.498779+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T16:44:13.498871+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T16:44:13.498941+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T16:44:13.498980+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T16:44:13.499015+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T16:44:13.499047+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T16:44:13.525098+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T16:44:13.525187+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T16:44:13.525250+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T16:44:13.525302+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T16:44:13.525337+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T16:44:13.525369+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T16:44:13.552440+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T16:44:13.552530+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T16:44:13.552602+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T16:44:13.552641+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T16:44:13.552676+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T16:44:13.552708+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T16:44:13.578527+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T16:44:13.578615+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T16:44:13.578678+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T16:44:13.578730+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T16:44:13.578764+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T16:44:13.578803+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T16:44:13.610263+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T16:44:13.610352+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T16:44:13.610423+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T16:44:13.610469+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T16:44:13.610504+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T16:44:13.610536+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T16:44:13.635508+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T16:44:13.635598+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T16:44:13.635659+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T16:44:13.635714+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T16:44:13.635749+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T16:44:13.635781+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T16:44:13.649650+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T16:44:13.649739+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T16:44:13.649799+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T16:44:13.649855+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T16:44:13.649889+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T16:44:13.649921+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T16:44:13.692023+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T16:44:13.692113+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T16:44:13.692181+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T16:44:13.692221+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T16:44:13.692269+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T16:44:13.692305+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T16:44:13.706994+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T16:44:13.707083+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T16:44:13.707144+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T16:44:13.707247+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T16:44:13.707281+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T16:44:13.707312+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T16:44:13.747948+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T16:44:13.748038+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T16:44:13.748109+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T16:44:13.748149+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T16:44:13.748184+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T16:44:13.748217+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T16:44:13.774653+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T16:44:13.774743+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T16:44:13.774804+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T16:44:13.774857+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T16:44:13.774892+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T16:44:13.774924+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T16:44:13.793521+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T16:44:13.793610+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T16:44:13.793676+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T16:44:13.793724+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T16:44:13.793760+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T16:44:13.793794+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T16:44:13.807705+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T16:44:13.807799+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T16:44:13.807870+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T16:44:13.807916+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T16:44:13.807952+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T16:44:13.807986+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T16:44:13.837594+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T16:44:13.837684+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T16:44:13.837755+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T16:44:13.837796+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T16:44:13.837831+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T16:44:13.837864+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T16:44:13.876175+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T16:44:13.876270+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T16:44:13.876334+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]'), OpList(arg0=5, expr_toks=['[num4]', '/', '[num3]'], expr_str='[num4]/[num3]')]
[2022-09-12T16:44:13.876391+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T16:44:13.876426+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1999999999999999866773237045
[2022-09-12T16:44:13.876458+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T16:44:13.904810+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T16:44:13.904899+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T16:44:13.904960+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T16:44:13.905061+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T16:44:13.905097+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T16:44:13.905129+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T16:44:13.925518+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T16:44:13.925617+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T16:44:13.925665+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T16:44:13.925706+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T16:44:13.925742+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T16:44:13.925775+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T16:44:13.940821+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T16:44:13.940911+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T16:44:13.940973+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T16:44:13.941029+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T16:44:13.941064+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T16:44:13.941096+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T16:44:13.966404+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T16:44:13.966494+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T16:44:13.966557+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T16:44:13.966616+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T16:44:13.966651+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T16:44:13.966683+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T16:44:36.073058+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 60 val_acc: 0.837
[2022-09-12T16:48:00.463928+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 61, loss-ave: 0.001013414283674686, mAcc: 0.9995185899820569
[2022-09-12T16:51:23.838819+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 62, loss-ave: 0.0010994252417795356, mAcc: 0.9994601006542302
[2022-09-12T16:54:51.713945+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 63, loss-ave: 0.0010954617099486598, mAcc: 0.9994875809345866
[2022-09-12T16:58:20.056820+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 64, loss-ave: 0.0010112999656328263, mAcc: 0.9994806890883601
[2022-09-12T17:01:47.162284+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 65, loss-ave: 0.001006448576824027, mAcc: 0.9995258132042868
[2022-09-12T17:01:47.162811+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T17:01:47.178023+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T17:01:47.178127+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T17:01:47.178186+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T17:01:47.178242+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T17:01:47.178282+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T17:01:47.178315+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T17:01:47.193623+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T17:01:47.193733+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T17:01:47.193781+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T17:01:47.193835+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T17:01:47.193872+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T17:01:47.193905+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T17:01:47.221607+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T17:01:47.221702+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T17:01:47.221772+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:01:47.221829+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:01:47.221866+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T17:01:47.221900+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T17:01:47.250019+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T17:01:47.250114+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T17:01:47.250193+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T17:01:47.250251+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T17:01:47.250287+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T17:01:47.250320+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T17:01:47.277663+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T17:01:47.277756+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T17:01:47.277824+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:01:47.277890+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:01:47.277925+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T17:01:47.277958+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T17:01:47.311318+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T17:01:47.311411+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T17:01:47.311478+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T17:01:47.311545+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T17:01:47.311582+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T17:01:47.311615+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T17:01:47.338196+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T17:01:47.338289+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T17:01:47.338363+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T17:01:47.338419+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T17:01:47.338455+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T17:01:47.338488+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T17:01:47.353172+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T17:01:47.353272+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T17:01:47.353365+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T17:01:47.353406+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T17:01:47.353441+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T17:01:47.353474+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T17:01:47.397947+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T17:01:47.398041+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T17:01:47.398103+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T17:01:47.398142+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T17:01:47.398195+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T17:01:47.398229+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T17:01:47.413828+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T17:01:47.413921+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T17:01:47.413990+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T17:01:47.414048+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T17:01:47.414084+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T17:01:47.414116+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T17:01:47.459833+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T17:01:47.459932+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T17:01:47.459983+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T17:01:47.460042+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T17:01:47.460086+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T17:01:47.460120+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T17:01:47.488125+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T17:01:47.488219+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T17:01:47.488290+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T17:01:47.488356+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T17:01:47.488392+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T17:01:47.488426+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T17:01:47.508064+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T17:01:47.508158+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T17:01:47.508229+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T17:01:47.508295+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T17:01:47.508332+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T17:01:47.508365+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T17:01:47.522855+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T17:01:47.522947+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T17:01:47.523016+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T17:01:47.523071+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T17:01:47.523106+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T17:01:47.523139+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T17:01:47.554337+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T17:01:47.554432+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T17:01:47.554500+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T17:01:47.554559+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T17:01:47.554595+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T17:01:47.554634+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T17:01:47.582779+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T17:01:47.582872+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T17:01:47.582934+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]'), OpList(arg0=4, expr_toks=['[num3]', '/', '[num1]'], expr_str='[num3]/[num1]')]
[2022-09-12T17:01:47.583002+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T17:01:47.583037+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.6666666666666666851703837438
[2022-09-12T17:01:47.583070+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T17:01:47.613327+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T17:01:47.613425+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T17:01:47.613504+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T17:01:47.613542+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T17:01:47.613594+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T17:01:47.613627+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T17:01:47.634902+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T17:01:47.635002+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T17:01:47.635051+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T17:01:47.635110+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T17:01:47.635146+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T17:01:47.635180+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T17:01:47.651140+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T17:01:47.651239+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T17:01:47.651311+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T17:01:47.651380+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T17:01:47.651419+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T17:01:47.651453+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T17:01:47.678077+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T17:01:47.678171+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T17:01:47.678233+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T17:01:47.678299+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T17:01:47.678335+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T17:01:47.678368+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T17:02:10.826409+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 65 val_acc: 0.844
[2022-09-12T17:05:39.664062+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 66, loss-ave: 0.001003942881689968, mAcc: 0.999500831886319
[2022-09-12T17:09:08.036404+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 67, loss-ave: 0.0009217584350355557, mAcc: 0.9995485064355044
[2022-09-12T17:12:36.462749+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 68, loss-ave: 0.0008732980164042013, mAcc: 0.999569073050461
[2022-09-12T17:16:04.656108+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 69, loss-ave: 0.0009037723922793269, mAcc: 0.9995732638810085
[2022-09-12T17:19:32.918809+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 70, loss-ave: 0.0009340641939235163, mAcc: 0.9995421131165019
[2022-09-12T17:19:32.919318+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T17:19:32.933898+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T17:19:32.933998+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T17:19:32.934053+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T17:19:32.934091+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T17:19:32.934126+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T17:19:32.934156+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T17:19:32.949124+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T17:19:32.949211+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T17:19:32.949276+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T17:19:32.949314+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T17:19:32.949357+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T17:19:32.949387+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T17:19:32.980262+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T17:19:32.980351+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T17:19:32.980411+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:19:32.980447+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:19:32.980479+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T17:19:32.980508+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T17:19:33.008472+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T17:19:33.008558+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T17:19:33.008621+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T17:19:33.008659+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T17:19:33.008691+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T17:19:33.008721+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T17:19:33.035351+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T17:19:33.035437+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T17:19:33.035507+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:19:33.035545+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:19:33.035576+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T17:19:33.035606+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T17:19:33.068057+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T17:19:33.068143+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T17:19:33.068209+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T17:19:33.068247+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T17:19:33.068292+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T17:19:33.068323+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T17:19:33.094145+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T17:19:33.094231+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T17:19:33.094290+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T17:19:33.094339+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T17:19:33.094371+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T17:19:33.094400+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T17:19:33.108782+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T17:19:33.108869+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T17:19:33.108926+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T17:19:33.108976+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T17:19:33.109007+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T17:19:33.109036+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T17:19:33.152566+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T17:19:33.152653+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T17:19:33.152714+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T17:19:33.152755+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T17:19:33.152787+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T17:19:33.152819+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T17:19:33.167944+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T17:19:33.168030+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T17:19:33.168095+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T17:19:33.168145+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T17:19:33.168177+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T17:19:33.168206+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T17:19:33.210290+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T17:19:33.210376+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T17:19:33.210442+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T17:19:33.210481+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T17:19:33.210512+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T17:19:33.210542+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T17:19:33.237797+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T17:19:33.237883+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T17:19:33.237942+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T17:19:33.237989+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T17:19:33.238020+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T17:19:33.238049+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T17:19:33.257523+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T17:19:33.257617+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T17:19:33.257663+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T17:19:33.257701+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T17:19:33.257732+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T17:19:33.257762+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T17:19:33.275971+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T17:19:33.276057+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T17:19:33.276119+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T17:19:33.276166+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T17:19:33.276197+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T17:19:33.276225+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T17:19:33.306919+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T17:19:33.307005+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T17:19:33.307072+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T17:19:33.307109+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T17:19:33.307141+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T17:19:33.307170+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T17:19:33.346239+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T17:19:33.346326+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T17:19:33.346386+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]'), OpList(arg0=5, expr_toks=['[num4]', '/', '[num3]'], expr_str='[num4]/[num3]')]
[2022-09-12T17:19:33.346435+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T17:19:33.346466+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1999999999999999866773237045
[2022-09-12T17:19:33.346496+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T17:19:33.375672+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T17:19:33.375757+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T17:19:33.375825+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T17:19:33.375860+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T17:19:33.375891+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T17:19:33.375920+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T17:19:33.396819+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T17:19:33.396910+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T17:19:33.396959+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T17:19:33.397001+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T17:19:33.397034+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T17:19:33.397063+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T17:19:33.412602+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T17:19:33.412688+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T17:19:33.412753+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T17:19:33.412790+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T17:19:33.412822+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T17:19:33.412851+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T17:19:33.439058+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T17:19:33.439145+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T17:19:33.439203+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T17:19:33.439253+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T17:19:33.439284+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T17:19:33.439313+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T17:19:56.339030+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 70 val_acc: 0.84
[2022-09-12T17:23:24.523342+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 71, loss-ave: 0.0008708747382056793, mAcc: 0.9995461142880822
[2022-09-12T17:26:52.638940+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 72, loss-ave: 0.0008807769375903181, mAcc: 0.9996030724005579
[2022-09-12T17:30:18.883654+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 73, loss-ave: 0.0008854178016105788, mAcc: 0.9995198010537598
[2022-09-12T17:33:48.107875+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 74, loss-ave: 0.000838787315594168, mAcc: 0.9995464364113791
[2022-09-12T17:37:15.413429+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 75, loss-ave: 0.0009118915943007333, mAcc: 0.9995459145156915
[2022-09-12T17:37:15.413932+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T17:37:15.428810+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T17:37:15.428915+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T17:37:15.428971+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T17:37:15.429008+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T17:37:15.429043+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T17:37:15.429073+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T17:37:15.444402+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T17:37:15.444492+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T17:37:15.444554+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T17:37:15.444593+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T17:37:15.444625+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T17:37:15.444654+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T17:37:15.471940+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T17:37:15.472031+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T17:37:15.472098+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:37:15.472135+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:37:15.472167+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T17:37:15.472197+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T17:37:15.500481+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T17:37:15.500572+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T17:37:15.500635+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T17:37:15.500672+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T17:37:15.500705+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T17:37:15.500735+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T17:37:15.527813+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T17:37:15.527902+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T17:37:15.527970+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:37:15.528006+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:37:15.528038+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T17:37:15.528068+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T17:37:15.561151+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T17:37:15.561240+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T17:37:15.561305+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T17:37:15.561343+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T17:37:15.561376+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T17:37:15.561406+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T17:37:15.587552+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T17:37:15.587640+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T17:37:15.587708+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T17:37:15.587744+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T17:37:15.587776+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T17:37:15.587805+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T17:37:15.602347+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T17:37:15.602437+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T17:37:15.602495+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T17:37:15.602542+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T17:37:15.602574+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T17:37:15.602602+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T17:37:15.646870+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T17:37:15.646959+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T17:37:15.647021+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T17:37:15.647059+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T17:37:15.647092+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T17:37:15.647121+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T17:37:15.662731+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T17:37:15.662820+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T17:37:15.662889+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T17:37:15.662927+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T17:37:15.662959+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T17:37:15.662989+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T17:37:15.705703+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T17:37:15.705793+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T17:37:15.705856+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T17:37:15.705893+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T17:37:15.705926+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T17:37:15.705955+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T17:37:15.733721+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T17:37:15.733810+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T17:37:15.733878+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T17:37:15.733920+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T17:37:15.733952+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T17:37:15.733981+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T17:37:15.753324+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T17:37:15.753413+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T17:37:15.753474+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T17:37:15.753514+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T17:37:15.753546+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T17:37:15.753576+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T17:37:15.768198+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T17:37:15.768297+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T17:37:15.768364+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T17:37:15.768400+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T17:37:15.768431+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T17:37:15.768460+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T17:37:15.799558+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T17:37:15.799647+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T17:37:15.799713+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T17:37:15.799751+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T17:37:15.799783+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T17:37:15.799814+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T17:37:15.827844+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T17:37:15.827933+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T17:37:15.827994+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]'), OpList(arg0=4, expr_toks=['[num3]', '/', '[num1]'], expr_str='[num3]/[num1]')]
[2022-09-12T17:37:15.828048+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T17:37:15.828081+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.6666666666666666851703837438
[2022-09-12T17:37:15.828110+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T17:37:15.857956+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T17:37:15.858044+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T17:37:15.858114+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T17:37:15.858151+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T17:37:15.858184+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T17:37:15.858213+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T17:37:15.879371+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T17:37:15.879468+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T17:37:15.879514+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T17:37:15.879553+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T17:37:15.879585+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T17:37:15.879615+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T17:37:15.895796+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T17:37:15.895886+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T17:37:15.895949+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T17:37:15.895987+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T17:37:15.896019+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T17:37:15.896049+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T17:37:15.922839+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T17:37:15.922928+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T17:37:15.923004+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T17:37:15.923040+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T17:37:15.923071+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T17:37:15.923101+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T17:37:39.161912+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 75 val_acc: 0.843
[2022-09-12T17:41:05.701367+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 76, loss-ave: 0.0008894339578624331, mAcc: 0.9995617284241136
[2022-09-12T17:44:33.181637+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 77, loss-ave: 0.0007924615580091726, mAcc: 0.9995451233016885
[2022-09-12T17:48:00.349651+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 78, loss-ave: 0.0007926772915241449, mAcc: 0.9995497542598187
[2022-09-12T17:51:28.590772+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 79, loss-ave: 0.0008055209402676069, mAcc: 0.9995971656017786
[2022-09-12T17:54:57.028034+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 80, loss-ave: 0.0007712792617313845, mAcc: 0.9996283134398478
[2022-09-12T17:54:57.028870+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T17:54:57.046477+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T17:54:57.046569+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T17:54:57.046636+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T17:54:57.046698+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T17:54:57.046742+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T17:54:57.046780+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T17:54:57.064665+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T17:54:57.064754+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T17:54:57.064823+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T17:54:57.064869+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T17:54:57.064911+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T17:54:57.064948+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T17:54:57.097971+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T17:54:57.098074+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T17:54:57.098129+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:54:57.098197+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:54:57.098238+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T17:54:57.098274+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T17:54:57.131681+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T17:54:57.131780+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T17:54:57.131832+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T17:54:57.131892+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T17:54:57.131934+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T17:54:57.131972+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T17:54:57.164151+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T17:54:57.164250+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T17:54:57.164308+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:54:57.164412+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T17:54:57.164453+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T17:54:57.164491+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T17:54:57.203308+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T17:54:57.203428+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T17:54:57.203501+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T17:54:57.203550+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T17:54:57.203593+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T17:54:57.203631+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T17:54:57.235252+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T17:54:57.235361+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T17:54:57.235419+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T17:54:57.235512+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T17:54:57.235552+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T17:54:57.235589+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T17:54:57.252806+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T17:54:57.252912+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T17:54:57.252962+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T17:54:57.253006+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T17:54:57.253062+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T17:54:57.253098+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T17:54:57.305383+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T17:54:57.305467+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T17:54:57.305540+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T17:54:57.305588+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T17:54:57.305630+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T17:54:57.305668+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T17:54:57.324100+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T17:54:57.324202+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T17:54:57.324278+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T17:54:57.324324+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T17:54:57.324364+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T17:54:57.324401+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T17:54:57.374499+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T17:54:57.374594+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T17:54:57.374672+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T17:54:57.374719+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T17:54:57.374760+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T17:54:57.374797+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T17:54:57.407643+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T17:54:57.407743+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T17:54:57.407794+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T17:54:57.407835+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T17:54:57.407891+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T17:54:57.407928+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T17:54:57.430922+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T17:54:57.431003+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T17:54:57.431055+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T17:54:57.431118+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T17:54:57.431159+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T17:54:57.431197+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T17:54:57.448305+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T17:54:57.448404+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T17:54:57.448470+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T17:54:57.448514+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T17:54:57.448553+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T17:54:57.448590+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T17:54:57.485542+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T17:54:57.485637+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T17:54:57.485696+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T17:54:57.485759+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T17:54:57.485802+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T17:54:57.485840+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T17:54:57.532651+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T17:54:57.532759+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T17:54:57.532830+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]'), OpList(arg0=5, expr_toks=['[num4]', '/', '[num3]'], expr_str='[num4]/[num3]')]
[2022-09-12T17:54:57.532876+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T17:54:57.532917+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1999999999999999866773237045
[2022-09-12T17:54:57.532956+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T17:54:57.569544+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T17:54:57.569674+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T17:54:57.569727+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T17:54:57.569790+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T17:54:57.569831+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T17:54:57.569868+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T17:54:57.595082+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T17:54:57.595165+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T17:54:57.595218+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T17:54:57.595260+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T17:54:57.595324+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T17:54:57.595362+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T17:54:57.614142+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T17:54:57.614242+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T17:54:57.614294+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T17:54:57.614336+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T17:54:57.614393+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T17:54:57.614431+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T17:54:57.645710+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T17:54:57.645812+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T17:54:57.645862+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T17:54:57.645907+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T17:54:57.645963+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T17:54:57.646000+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T17:55:21.134238+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 80 val_acc: 0.842
[2022-09-12T17:58:49.461654+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 81, loss-ave: 0.0008232081367576125, mAcc: 0.9995848245138726
[2022-09-12T18:02:16.229425+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 82, loss-ave: 0.0007945615484564746, mAcc: 0.9995896499509845
[2022-09-12T18:05:44.961224+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 83, loss-ave: 0.0007596252259133757, mAcc: 0.9995791118497883
[2022-09-12T18:09:11.998287+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 84, loss-ave: 0.0007619863317614464, mAcc: 0.9996159502745535
[2022-09-12T18:12:40.404474+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 85, loss-ave: 0.0008702469131799919, mAcc: 0.9995481757911103
[2022-09-12T18:12:40.404944+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T18:12:40.419557+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T18:12:40.419667+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T18:12:40.419724+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T18:12:40.419763+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T18:12:40.419811+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T18:12:40.419845+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T18:12:40.434642+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T18:12:40.434733+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T18:12:40.434798+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T18:12:40.434837+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T18:12:40.434873+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T18:12:40.434905+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T18:12:40.461673+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T18:12:40.461763+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T18:12:40.461833+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:12:40.461880+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:12:40.461916+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T18:12:40.461948+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T18:12:40.489729+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T18:12:40.489819+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T18:12:40.489886+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T18:12:40.489924+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T18:12:40.489959+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T18:12:40.489991+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T18:12:40.516578+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T18:12:40.516669+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T18:12:40.516735+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:12:40.516773+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:12:40.516840+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T18:12:40.516873+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T18:12:40.549391+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T18:12:40.549480+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T18:12:40.549550+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T18:12:40.549649+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T18:12:40.549685+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T18:12:40.549718+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T18:12:40.575434+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T18:12:40.575524+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T18:12:40.575594+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T18:12:40.575632+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T18:12:40.575666+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T18:12:40.575698+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T18:12:40.589969+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T18:12:40.590059+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T18:12:40.590118+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:12:40.590174+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:12:40.590207+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T18:12:40.590239+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T18:12:40.633592+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T18:12:40.633683+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T18:12:40.633746+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T18:12:40.633787+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T18:12:40.633831+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T18:12:40.633864+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T18:12:40.649010+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T18:12:40.649100+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T18:12:40.649162+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T18:12:40.649216+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T18:12:40.649251+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T18:12:40.649283+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T18:12:40.691168+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T18:12:40.691259+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T18:12:40.691325+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T18:12:40.691372+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T18:12:40.691408+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T18:12:40.691441+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T18:12:40.718600+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T18:12:40.718689+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T18:12:40.718758+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T18:12:40.718835+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T18:12:40.718870+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T18:12:40.718903+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T18:12:40.738044+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T18:12:40.738134+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T18:12:40.738202+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T18:12:40.738247+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T18:12:40.738282+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T18:12:40.738314+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T18:12:40.752584+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T18:12:40.752678+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T18:12:40.752746+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:12:40.752784+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T18:12:40.752821+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T18:12:40.752855+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T18:12:40.783411+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T18:12:40.783502+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T18:12:40.783570+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T18:12:40.783609+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T18:12:40.783645+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T18:12:40.783678+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T18:12:40.823088+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T18:12:40.823179+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T18:12:40.823241+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]'), OpList(arg0=5, expr_toks=['[num4]', '/', '[num3]'], expr_str='[num4]/[num3]')]
[2022-09-12T18:12:40.823294+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T18:12:40.823329+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1999999999999999866773237045
[2022-09-12T18:12:40.823362+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T18:12:40.852530+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T18:12:40.852620+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T18:12:40.852693+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T18:12:40.852732+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T18:12:40.852767+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T18:12:40.852802+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T18:12:40.873579+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T18:12:40.873677+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T18:12:40.873725+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T18:12:40.873765+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T18:12:40.873801+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T18:12:40.873834+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T18:12:40.889284+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T18:12:40.889374+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T18:12:40.889443+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T18:12:40.889482+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T18:12:40.889517+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T18:12:40.889549+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T18:12:40.915722+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T18:12:40.915813+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T18:12:40.915874+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T18:12:40.915927+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T18:12:40.915963+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T18:12:40.916001+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T18:13:03.836417+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 85 val_acc: 0.842
[2022-09-12T18:16:32.031124+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 86, loss-ave: 0.0007035300755557075, mAcc: 0.999651710522304
[2022-09-12T18:20:00.690839+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 87, loss-ave: 0.0007046317917644253, mAcc: 0.9996499049534436
[2022-09-12T18:23:29.589095+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 88, loss-ave: 0.0007773404164485384, mAcc: 0.9996518941992887
[2022-09-12T18:26:56.998543+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 89, loss-ave: 0.0008458046276071183, mAcc: 0.9995918406045824
[2022-09-12T18:30:25.292405+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 90, loss-ave: 0.0007922351900341733, mAcc: 0.999598668972938
[2022-09-12T18:30:25.292901+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T18:30:25.307449+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T18:30:25.307560+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T18:30:25.307616+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T18:30:25.307656+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T18:30:25.307694+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T18:30:25.307726+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T18:30:25.322486+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T18:30:25.322586+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T18:30:25.322653+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T18:30:25.322690+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T18:30:25.322726+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T18:30:25.322757+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T18:30:25.349483+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T18:30:25.349582+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T18:30:25.349652+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:30:25.349691+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:30:25.349725+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T18:30:25.349760+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T18:30:25.377473+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T18:30:25.377572+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T18:30:25.377650+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T18:30:25.377694+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T18:30:25.377730+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T18:30:25.377762+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T18:30:25.404475+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T18:30:25.404565+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T18:30:25.404637+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:30:25.404679+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:30:25.404713+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T18:30:25.404746+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T18:30:25.437151+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T18:30:25.437240+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T18:30:25.437309+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T18:30:25.437347+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T18:30:25.437383+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T18:30:25.437416+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T18:30:25.463056+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T18:30:25.463145+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T18:30:25.463206+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T18:30:25.463257+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T18:30:25.463292+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T18:30:25.463329+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T18:30:25.477576+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T18:30:25.477665+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T18:30:25.477724+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:30:25.477783+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:30:25.477816+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T18:30:25.477848+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T18:30:25.521733+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T18:30:25.521835+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T18:30:25.521884+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T18:30:25.521923+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T18:30:25.521959+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T18:30:25.521993+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T18:30:25.537102+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T18:30:25.537191+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T18:30:25.537253+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T18:30:25.537307+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T18:30:25.537342+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T18:30:25.537374+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T18:30:25.579466+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T18:30:25.579555+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T18:30:25.579624+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T18:30:25.579665+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T18:30:25.579706+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T18:30:25.579740+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T18:30:25.606833+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T18:30:25.606922+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T18:30:25.606984+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T18:30:25.607035+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T18:30:25.607070+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T18:30:25.607102+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T18:30:25.626082+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T18:30:25.626173+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T18:30:25.626238+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T18:30:25.626278+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T18:30:25.626313+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T18:30:25.626344+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T18:30:25.640577+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T18:30:25.640666+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T18:30:25.640726+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:30:25.640777+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T18:30:25.640811+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T18:30:25.640843+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T18:30:25.671321+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T18:30:25.671411+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T18:30:25.671481+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T18:30:25.671525+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T18:30:25.671565+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T18:30:25.671599+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T18:30:25.710657+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T18:30:25.710747+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T18:30:25.710810+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]'), OpList(arg0=5, expr_toks=['[num4]', '/', '[num3]'], expr_str='[num4]/[num3]')]
[2022-09-12T18:30:25.710863+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T18:30:25.710898+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1999999999999999866773237045
[2022-09-12T18:30:25.710931+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T18:30:25.740076+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T18:30:25.740165+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T18:30:25.740237+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T18:30:25.740288+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T18:30:25.740323+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T18:30:25.740355+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T18:30:25.761281+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T18:30:25.761381+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T18:30:25.761428+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T18:30:25.761468+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T18:30:25.761507+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T18:30:25.761540+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T18:30:25.777128+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T18:30:25.777218+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T18:30:25.777293+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T18:30:25.777340+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T18:30:25.777376+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T18:30:25.777409+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T18:30:25.803653+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T18:30:25.803743+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T18:30:25.803804+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T18:30:25.803857+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T18:30:25.803891+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T18:30:25.803923+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T18:30:48.642531+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 90 val_acc: 0.842
[2022-09-12T18:34:17.633933+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 91, loss-ave: 0.0008094834045028613, mAcc: 0.9996433826990506
[2022-09-12T18:37:45.467196+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 92, loss-ave: 0.0008066628918357881, mAcc: 0.9995725566729742
[2022-09-12T18:41:09.018037+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 93, loss-ave: 0.0007611437663541152, mAcc: 0.999618534835237
[2022-09-12T18:44:31.828621+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 94, loss-ave: 0.0007600863125326263, mAcc: 0.9996351627666598
[2022-09-12T18:47:56.864151+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 95, loss-ave: 0.0007869225861666536, mAcc: 0.9996081595816767
[2022-09-12T18:47:56.864693+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T18:47:56.879445+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T18:47:56.879552+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T18:47:56.879634+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T18:47:56.879678+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T18:47:56.879781+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T18:47:56.879818+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T18:47:56.894549+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T18:47:56.894649+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T18:47:56.894725+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T18:47:56.894780+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T18:47:56.894835+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T18:47:56.894871+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T18:47:56.921780+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T18:47:56.921877+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T18:47:56.921972+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:47:56.922032+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:47:56.922070+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T18:47:56.922106+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T18:47:56.949546+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T18:47:56.949644+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T18:47:56.949735+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T18:47:56.949796+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T18:47:56.949835+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T18:47:56.949871+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T18:47:56.976751+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T18:47:56.976864+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T18:47:56.976936+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:47:56.976981+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:47:56.977019+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T18:47:56.977056+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T18:47:57.009274+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T18:47:57.009371+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T18:47:57.009459+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T18:47:57.009527+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T18:47:57.009567+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T18:47:57.009604+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T18:47:57.035524+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T18:47:57.035619+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T18:47:57.035709+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T18:47:57.035780+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T18:47:57.035820+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T18:47:57.035856+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T18:47:57.050017+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T18:47:57.050114+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T18:47:57.050196+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:47:57.050278+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:47:57.050318+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T18:47:57.050352+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T18:47:57.093460+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T18:47:57.093557+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T18:47:57.093637+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T18:47:57.093714+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T18:47:57.093754+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T18:47:57.093790+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T18:47:57.108754+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T18:47:57.108849+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T18:47:57.109012+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T18:47:57.109059+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T18:47:57.109098+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T18:47:57.109134+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T18:47:57.150772+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T18:47:57.150870+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T18:47:57.150948+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T18:47:57.151009+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T18:47:57.151049+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T18:47:57.151085+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T18:47:57.178027+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T18:47:57.178122+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T18:47:57.178218+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T18:47:57.178276+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T18:47:57.178315+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T18:47:57.178350+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T18:47:57.197621+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T18:47:57.197715+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T18:47:57.197791+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T18:47:57.197846+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T18:47:57.197900+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T18:47:57.197935+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T18:47:57.212076+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T18:47:57.212170+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T18:47:57.212281+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:47:57.212345+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T18:47:57.212383+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T18:47:57.212421+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T18:47:57.243024+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T18:47:57.243122+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T18:47:57.243199+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T18:47:57.243259+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T18:47:57.243299+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T18:47:57.243335+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T18:47:57.282004+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T18:47:57.282102+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T18:47:57.282188+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]'), OpList(arg0=5, expr_toks=['[num4]', '/', '[num3]'], expr_str='[num4]/[num3]')]
[2022-09-12T18:47:57.282255+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T18:47:57.282295+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1999999999999999866773237045
[2022-09-12T18:47:57.282331+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T18:47:57.311486+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T18:47:57.311582+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T18:47:57.311673+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T18:47:57.311715+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T18:47:57.311768+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T18:47:57.311804+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T18:47:57.332338+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T18:47:57.332446+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T18:47:57.332514+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T18:47:57.332559+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T18:47:57.332614+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T18:47:57.332650+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T18:47:57.348130+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T18:47:57.348226+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T18:47:57.348330+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T18:47:57.348393+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T18:47:57.348433+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T18:47:57.348470+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T18:47:57.374541+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T18:47:57.374637+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T18:47:57.374721+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T18:47:57.374793+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T18:47:57.374833+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T18:47:57.374869+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T18:48:19.882986+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 95 val_acc: 0.839
[2022-09-12T18:51:42.541637+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 96, loss-ave: 0.0007489060410488088, mAcc: 0.9996145001817697
[2022-09-12T18:51:42.542156+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T18:51:42.556734+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T18:51:42.556841+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T18:51:42.556948+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T18:51:42.557013+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T18:51:42.557060+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T18:51:42.557097+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T18:51:42.571642+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T18:51:42.571741+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T18:51:42.571815+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T18:51:42.571876+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T18:51:42.571916+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T18:51:42.571952+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T18:51:42.598589+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T18:51:42.598685+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T18:51:42.598773+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:51:42.598840+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:51:42.598879+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T18:51:42.598914+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T18:51:42.626073+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T18:51:42.626169+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T18:51:42.626257+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T18:51:42.626317+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T18:51:42.626356+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T18:51:42.626392+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T18:51:42.652991+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T18:51:42.653087+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T18:51:42.653178+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:51:42.653246+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:51:42.653286+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T18:51:42.653322+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T18:51:42.685094+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T18:51:42.685189+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T18:51:42.685287+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T18:51:42.685347+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T18:51:42.685386+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T18:51:42.685422+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T18:51:42.711255+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T18:51:42.711349+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T18:51:42.711431+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T18:51:42.711502+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T18:51:42.711540+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T18:51:42.711576+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T18:51:42.725598+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T18:51:42.725695+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T18:51:42.725780+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:51:42.725846+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:51:42.725885+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T18:51:42.725920+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T18:51:42.768754+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T18:51:42.768850+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T18:51:42.768929+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T18:51:42.768980+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T18:51:42.769040+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T18:51:42.769077+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T18:51:42.783915+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T18:51:42.784008+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T18:51:42.784123+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T18:51:42.784192+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T18:51:42.784231+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T18:51:42.784273+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T18:51:42.825792+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T18:51:42.825889+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T18:51:42.825974+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T18:51:42.826035+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T18:51:42.826074+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T18:51:42.826111+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T18:51:42.852846+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T18:51:42.852942+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T18:51:42.853032+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T18:51:42.853076+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T18:51:42.853130+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T18:51:42.853166+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T18:51:42.872259+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T18:51:42.872353+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T18:51:42.872428+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T18:51:42.872495+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T18:51:42.872535+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T18:51:42.872570+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T18:51:42.886799+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T18:51:42.886895+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T18:51:42.886980+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:51:42.887046+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T18:51:42.887084+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T18:51:42.887119+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T18:51:42.917646+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T18:51:42.917740+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T18:51:42.917873+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T18:51:42.917918+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T18:51:42.917956+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T18:51:42.917992+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T18:51:42.956157+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T18:51:42.956259+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T18:51:42.956346+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]'), OpList(arg0=5, expr_toks=['[num4]', '/', '[num3]'], expr_str='[num4]/[num3]')]
[2022-09-12T18:51:42.956412+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T18:51:42.956452+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1999999999999999866773237045
[2022-09-12T18:51:42.956488+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T18:51:42.985565+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T18:51:42.985657+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T18:51:42.985768+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T18:51:42.985810+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T18:51:42.985865+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T18:51:42.985901+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T18:51:43.006324+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T18:51:43.006428+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T18:51:43.006502+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T18:51:43.006565+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T18:51:43.006603+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T18:51:43.006640+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T18:51:43.022162+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T18:51:43.022259+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T18:51:43.022355+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T18:51:43.022417+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T18:51:43.022455+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T18:51:43.022492+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T18:51:43.048189+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T18:51:43.048290+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T18:51:43.048373+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T18:51:43.048452+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T18:51:43.048492+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T18:51:43.048527+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T18:52:05.420319+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 96 val_acc: 0.839
[2022-09-12T18:55:28.452643+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 97, loss-ave: 0.000773753835754109, mAcc: 0.9995789299372732
[2022-09-12T18:55:28.453172+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T18:55:28.467627+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T18:55:28.467744+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T18:55:28.467825+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T18:55:28.467884+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T18:55:28.467926+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T18:55:28.467963+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T18:55:28.482574+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T18:55:28.482681+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T18:55:28.482756+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T18:55:28.482798+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T18:55:28.482853+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T18:55:28.482898+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T18:55:28.509480+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T18:55:28.509582+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T18:55:28.509679+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:55:28.509739+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:55:28.509778+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T18:55:28.509814+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T18:55:28.537097+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T18:55:28.537193+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T18:55:28.537282+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T18:55:28.537352+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T18:55:28.537393+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T18:55:28.537429+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T18:55:28.563897+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T18:55:28.563991+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T18:55:28.564080+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:55:28.564147+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:55:28.564185+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T18:55:28.564221+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T18:55:28.595959+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T18:55:28.596056+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T18:55:28.596145+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T18:55:28.596190+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T18:55:28.596245+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T18:55:28.596289+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T18:55:28.621749+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T18:55:28.621845+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T18:55:28.621934+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T18:55:28.622001+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T18:55:28.622039+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T18:55:28.622074+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T18:55:28.636239+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T18:55:28.636344+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T18:55:28.636434+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:55:28.636500+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:55:28.636539+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T18:55:28.636574+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T18:55:28.679418+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T18:55:28.679516+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T18:55:28.679597+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T18:55:28.679642+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T18:55:28.679697+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T18:55:28.679733+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T18:55:28.694645+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T18:55:28.694738+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T18:55:28.694819+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T18:55:28.694894+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T18:55:28.694932+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T18:55:28.694968+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T18:55:28.736364+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T18:55:28.736461+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T18:55:28.736559+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T18:55:28.736622+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T18:55:28.736660+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T18:55:28.736702+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T18:55:28.763779+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T18:55:28.763876+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T18:55:28.763959+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T18:55:28.764038+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T18:55:28.764077+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T18:55:28.764113+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T18:55:28.782877+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T18:55:28.782974+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T18:55:28.783048+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T18:55:28.783110+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T18:55:28.783148+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T18:55:28.783184+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T18:55:28.797265+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T18:55:28.797358+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T18:55:28.797439+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:55:28.797519+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T18:55:28.797556+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T18:55:28.797591+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T18:55:28.827631+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T18:55:28.827728+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T18:55:28.827820+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T18:55:28.827881+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T18:55:28.827921+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T18:55:28.827957+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T18:55:28.866324+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T18:55:28.866422+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T18:55:28.866522+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]'), OpList(arg0=5, expr_toks=['[num4]', '/', '[num3]'], expr_str='[num4]/[num3]')]
[2022-09-12T18:55:28.866581+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T18:55:28.866620+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1999999999999999866773237045
[2022-09-12T18:55:28.866657+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T18:55:28.895629+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T18:55:28.895725+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T18:55:28.895813+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T18:55:28.895879+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T18:55:28.895917+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T18:55:28.895953+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T18:55:28.916413+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T18:55:28.916519+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T18:55:28.916587+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T18:55:28.916655+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T18:55:28.916694+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T18:55:28.916730+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T18:55:28.932179+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T18:55:28.932282+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T18:55:28.932373+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T18:55:28.932440+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T18:55:28.932480+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T18:55:28.932517+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T18:55:28.958603+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T18:55:28.958698+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T18:55:28.958778+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T18:55:28.958854+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T18:55:28.958892+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T18:55:28.958929+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T18:55:51.273552+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 97 val_acc: 0.84
[2022-09-12T18:59:13.669848+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 98, loss-ave: 0.000784488526027054, mAcc: 0.9996312597168051
[2022-09-12T18:59:13.670353+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T18:59:13.684674+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T18:59:13.684788+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T18:59:13.684861+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T18:59:13.684905+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T18:59:13.684963+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T18:59:13.684999+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T18:59:13.699613+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T18:59:13.699716+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T18:59:13.699790+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T18:59:13.699831+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T18:59:13.699889+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T18:59:13.699924+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T18:59:13.726466+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T18:59:13.726569+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T18:59:13.726661+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:59:13.726730+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:59:13.726770+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T18:59:13.726807+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T18:59:13.753985+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T18:59:13.754092+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T18:59:13.754174+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T18:59:13.754219+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T18:59:13.754258+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T18:59:13.754294+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T18:59:13.780766+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T18:59:13.780865+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T18:59:13.780941+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:59:13.780985+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T18:59:13.781044+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T18:59:13.781080+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T18:59:13.812751+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T18:59:13.812846+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T18:59:13.812935+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T18:59:13.812997+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T18:59:13.813036+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T18:59:13.813073+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T18:59:13.838600+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T18:59:13.838703+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T18:59:13.838786+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T18:59:13.838855+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T18:59:13.838893+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T18:59:13.838928+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T18:59:13.853304+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T18:59:13.853398+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T18:59:13.853481+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:59:13.853555+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:59:13.853593+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T18:59:13.853628+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T18:59:13.896295+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T18:59:13.896391+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T18:59:13.896470+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T18:59:13.896532+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T18:59:13.896572+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T18:59:13.896608+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T18:59:13.911823+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T18:59:13.911915+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T18:59:13.912038+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T18:59:13.912098+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T18:59:13.912136+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T18:59:13.912171+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T18:59:13.953163+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T18:59:13.953263+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T18:59:13.953354+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T18:59:13.953416+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T18:59:13.953455+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T18:59:13.953491+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T18:59:13.980381+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T18:59:13.980477+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T18:59:13.980568+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T18:59:13.980611+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T18:59:13.980669+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T18:59:13.980705+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T18:59:13.999963+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T18:59:14.000056+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T18:59:14.000131+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T18:59:14.000176+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T18:59:14.000230+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T18:59:14.000272+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T18:59:14.014241+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T18:59:14.014335+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T18:59:14.014415+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T18:59:14.014484+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T18:59:14.014522+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T18:59:14.014557+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T18:59:14.044749+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T18:59:14.044854+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T18:59:14.044967+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T18:59:14.045012+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T18:59:14.045051+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T18:59:14.045088+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T18:59:14.083307+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T18:59:14.083401+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T18:59:14.083487+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]'), OpList(arg0=5, expr_toks=['[num4]', '/', '[num3]'], expr_str='[num4]/[num3]')]
[2022-09-12T18:59:14.083566+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T18:59:14.083604+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1999999999999999866773237045
[2022-09-12T18:59:14.083640+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T18:59:14.112425+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T18:59:14.112519+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T18:59:14.112604+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T18:59:14.112664+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T18:59:14.112703+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T18:59:14.112739+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T18:59:14.133383+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T18:59:14.133476+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T18:59:14.133554+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T18:59:14.133615+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T18:59:14.133660+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T18:59:14.133697+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T18:59:14.149295+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T18:59:14.149390+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T18:59:14.149472+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T18:59:14.149554+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T18:59:14.149593+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T18:59:14.149629+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T18:59:14.175628+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T18:59:14.175721+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T18:59:14.175841+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T18:59:14.175901+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T18:59:14.175938+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T18:59:14.175974+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T18:59:36.371629+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 98 val_acc: 0.839
[2022-09-12T19:02:58.590630+0800]-[INFO] recursion_trainer.py-train_one_epoch-116: epoch: 99, loss-ave: 0.000756108627701364, mAcc: 0.9996152592049609
[2022-09-12T19:02:58.591154+0800]-[INFO] recursion_trainer.py-train-81: [evaluate test-data]
[2022-09-12T19:02:58.605448+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 0
[2022-09-12T19:02:58.605562+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 在一正方形花池的[num0][rk0][int]周栽了[num1][rk2][int]棵柳树，每两棵柳树之间的间隔是[num2][rk1][int]米，这个正方形的周长=多少米？
[2022-09-12T19:02:58.605635+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]'], expr_str='[num1]*[num0]')]
[2022-09-12T19:02:58.605695+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]'], expr_str='[num1]*[num2]')]
[2022-09-12T19:02:58.605737+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 176
[2022-09-12T19:02:58.605774+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 880
[2022-09-12T19:02:58.620386+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 1
[2022-09-12T19:02:58.620489+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 张明有[num0][rk2][int]元钱，买书用去[num1][rk1][prec]，买文具的钱是买书的[num2][rk0][prec]．买文具用去多少元？
[2022-09-12T19:02:58.620587+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T19:02:58.620648+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '*', '[num2]'], expr_str='[num0]*[num1]*[num2]')]
[2022-09-12T19:02:58.620687+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 14.40000000000000026645352591
[2022-09-12T19:02:58.620722+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 14.40000000000000026645352591
[2022-09-12T19:02:58.647476+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 2
[2022-09-12T19:02:58.647569+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个工厂要生产[num0][rk3][int]个零件，前[num1][rk0][int]天生产了[num2][rk2][int]个，剩下的要在[num3][rk1][int]天内完成，平均每天生产多少个？
[2022-09-12T19:02:58.647659+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T19:02:58.647725+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T19:02:58.647763+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 150
[2022-09-12T19:02:58.647798+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 150
[2022-09-12T19:02:58.674972+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 3
[2022-09-12T19:02:58.675066+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一本字典定价[num0][rk2][int]元，[num1][rk1][float]出售后还赚[num2][rk0][prec]，这本字典进价=多少元．
[2022-09-12T19:02:58.675214+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T19:02:58.675258+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=6, expr_toks=['[num0]', '*', '[num1]', '/', '[num5]'], expr_str='[num0]*[num1]/[num5]')]
[2022-09-12T19:02:58.675297+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 6.000000000000000277555756157
[2022-09-12T19:02:58.675332+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 6.000000000000000277555756157
[2022-09-12T19:02:58.701590+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 4
[2022-09-12T19:02:58.701683+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 修一段长[num0][rk3][int]米的路，前[num1][rk0][int]小时共修了[num2][rk2][int]米，剩下的每小时修[num3][rk1][int]米，还要几小时才能修完？
[2022-09-12T19:02:58.701772+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T19:02:58.701838+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=6, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=7, expr_toks=['[num6]', '/', '[num3]'], expr_str='[num6]/[num3]')]
[2022-09-12T19:02:58.701876+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 4
[2022-09-12T19:02:58.701911+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 4
[2022-09-12T19:02:58.733531+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 5
[2022-09-12T19:02:58.733627+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一个圆的半径是[num0][rk1][int]厘米，如果把它的半径延长[num1][rk0][int]厘米，那么面积增加多少．
[2022-09-12T19:02:58.733722+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=5, expr_toks=['[num3]', '*', '[num4]', '^', '[num0]', '-', '[num3]', '*', '[num0]', '^', '[num0]'], expr_str='[num3]*[num4]^[num0]-[num3]*[num0]^[num0]')]
[2022-09-12T19:02:58.733785+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=5, expr_toks=['[num4]', '^', '[num1]', '-', '[num0]', '^', '[num1]'], expr_str='[num4]^[num1]-[num0]^[num1]'), OpList(arg0=6, expr_toks=['[num3]', '*', '[num5]'], expr_str='[num3]*[num5]')]
[2022-09-12T19:02:58.733825+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -81.64000000000000323296944771
[2022-09-12T19:02:58.733865+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 50.24000000000000198951966013
[2022-09-12T19:02:58.759468+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 6
[2022-09-12T19:02:58.759562+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 山上有苹果树[num0][rk1][int]棵，桃树比苹果树多[num1][rk0][frac]，桃树有多少棵？
[2022-09-12T19:02:58.759644+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T19:02:58.759725+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]'], expr_str='[num0]*[num4]')]
[2022-09-12T19:02:58.759763+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 240.0000000000000022204460492
[2022-09-12T19:02:58.759798+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 240.0000000000000022204460492
[2022-09-12T19:02:58.773819+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 7
[2022-09-12T19:02:58.773915+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 除数是[num0][rk1][int]，商是[num1][rk2][int]，余数是[num2][rk0][int]，被除数=．
[2022-09-12T19:02:58.773999+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T19:02:58.774073+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T19:02:58.774124+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 451
[2022-09-12T19:02:58.774172+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 451
[2022-09-12T19:02:58.817215+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 8
[2022-09-12T19:02:58.817311+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一捆电线，第一次用去全长的[num0][rk1][frac]，第二天用去余下的[num1][rk0][frac]，这时还剩[num2][rk2][int]米．这捆电线共长多少米？
[2022-09-12T19:02:58.817420+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T19:02:58.817477+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num0]', '-', '[num5]', '*', '[num1]'], expr_str='[num3]-[num0]-[num5]*[num1]'), OpList(arg0=7, expr_toks=['[num2]', '/', '[num6]'], expr_str='[num2]/[num6]')]
[2022-09-12T19:02:58.817517+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 180.0000000000000024980018054
[2022-09-12T19:02:58.817553+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 180.0000000000000024980018054
[2022-09-12T19:02:58.832448+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 9
[2022-09-12T19:02:58.832541+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两辆汽车同时从同一地点向相反的方向行驶，[num0][rk0][int]小时后两车相距[num1][rk2][int]千米，已知甲车每小时行[num2][rk1][int]千米，乙车每小时行多少千米？
[2022-09-12T19:02:58.832628+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T19:02:58.832697+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '/', '[num0]', '-', '[num2]'], expr_str='[num1]/[num0]-[num2]')]
[2022-09-12T19:02:58.832736+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 35
[2022-09-12T19:02:58.832771+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 35
[2022-09-12T19:02:58.874137+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 10
[2022-09-12T19:02:58.874234+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲乙两根绳子分别长[num0][rk2][int]米和[num1][rk1][int]米，各剪去同样长的一段后，乙根的长是甲根的[num2][rk0][frac]，甲根剪去多少米．
[2022-09-12T19:02:58.874310+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num3]', '+', '[num2]'], expr_str='[num3]+[num2]'), OpList(arg0=7, expr_toks=['[num5]', '/', '[num6]', '*', '[num2]'], expr_str='[num5]/[num6]*[num2]')]
[2022-09-12T19:02:58.874354+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num1]'], expr_str='[num0]-[num1]'), OpList(arg0=6, expr_toks=['[num3]', '-', '[num2]'], expr_str='[num3]-[num2]'), OpList(arg0=7, expr_toks=['[num0]', '-', '[num5]', '/', '[num6]'], expr_str='[num0]-[num5]/[num6]')]
[2022-09-12T19:02:58.874409+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 5.624999999999999869895739303
[2022-09-12T19:02:58.874446+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 1.500000000000000416333634234
[2022-09-12T19:02:58.901131+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 11
[2022-09-12T19:02:58.901227+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 鸡蛋有[num0][rk1][int]个，鸭蛋比鸡蛋多[num1][rk0][frac]，请问两种蛋共有几个？
[2022-09-12T19:02:58.901319+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=4, expr_toks=['[num2]', '+', '[num1]'], expr_str='[num2]+[num1]'), OpList(arg0=5, expr_toks=['[num0]', '*', '[num4]', '+', '[num0]'], expr_str='[num0]*[num4]+[num0]')]
[2022-09-12T19:02:58.901379+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=4, expr_toks=['[num0]', '+', '[num0]', '*', '[num1]', '+', '[num0]'], expr_str='[num0]+[num0]*[num1]+[num0]')]
[2022-09-12T19:02:58.901417+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 259.9999999999999988897769754
[2022-09-12T19:02:58.901452+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 259.9999999999999988897769754
[2022-09-12T19:02:58.920602+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 12
[2022-09-12T19:02:58.920695+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 计算：[num0][rk3][int]+[num1][rk5][int]-[num2][rk0][int]*[num3][rk2][int]+[num4][rk4][int]/[num5][rk1][int]=．
[2022-09-12T19:02:58.920773+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T19:02:58.920821+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=8, expr_toks=['[num0]', '+', '[num1]', '-', '[num2]', '*', '[num3]', '+', '[num4]', '/', '[num5]'], expr_str='[num0]+[num1]-[num2]*[num3]+[num4]/[num5]')]
[2022-09-12T19:02:58.920881+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 700
[2022-09-12T19:02:58.920917+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 700
[2022-09-12T19:02:58.934993+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 13
[2022-09-12T19:02:58.935085+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: [num0][rk2][int]除多少的商是[num1][rk0][int]，余数是[num2][rk1][int]．
[2022-09-12T19:02:58.935174+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num0]', '+', '[num2]'], expr_str='[num1]*[num0]+[num2]')]
[2022-09-12T19:02:58.935247+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '+', '[num2]'], expr_str='[num0]*[num1]+[num2]')]
[2022-09-12T19:02:58.935298+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 344
[2022-09-12T19:02:58.935346+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 344
[2022-09-12T19:02:58.965753+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 14
[2022-09-12T19:02:58.965850+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 图书馆里有一些科技书和文艺书，其中科技书占[num0][rk1][frac]，如果用文艺书换走科技书[num1][rk2][int]本，那么科技书占全部的[num2][rk0][frac]，问原来科技书有多少本？
[2022-09-12T19:02:58.965946+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]', '-', '[num2]'], expr_str='[num3]-[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T19:02:58.966008+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '-', '[num2]'], expr_str='[num0]-[num2]'), OpList(arg0=6, expr_toks=['[num1]', '/', '[num5]', '*', '[num0]'], expr_str='[num1]/[num5]*[num0]')]
[2022-09-12T19:02:58.966047+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: -47.99999999999999733546474090
[2022-09-12T19:02:58.966083+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 59.99999999999999167332731532
[2022-09-12T19:02:59.004437+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 15
[2022-09-12T19:02:59.004531+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 甲队调[num0][rk0][frac]的人给乙队，两队的人数就相等．原来乙队是甲队人数的多少．
[2022-09-12T19:02:59.004624+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]'], expr_str='[num1]-[num0]'), OpList(arg0=4, expr_toks=['[num1]', '-', '[num3]'], expr_str='[num1]-[num3]'), OpList(arg0=5, expr_toks=['[num4]', '/', '[num3]'], expr_str='[num4]/[num3]')]
[2022-09-12T19:02:59.004706+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=3, expr_toks=['[num1]', '-', '[num0]', '-', '[num0]'], expr_str='[num1]-[num0]-[num0]')]
[2022-09-12T19:02:59.004744+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 0.1999999999999999866773237045
[2022-09-12T19:02:59.004780+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 0.6666666666666666851703837438
[2022-09-12T19:02:59.034078+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 16
[2022-09-12T19:02:59.034174+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 一项工程，[num0][rk0][int]个工人[num1][rk2][int]天完成．如果要[num2][rk1][int]天完成，需要多少个工人？
[2022-09-12T19:02:59.034261+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '/', '[num1]', '/', '[num0]'], expr_str='[num3]/[num1]/[num0]'), OpList(arg0=6, expr_toks=['[num3]', '/', '[num5]', '/', '[num2]'], expr_str='[num3]/[num5]/[num2]')]
[2022-09-12T19:02:59.034327+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '*', '[num1]', '/', '[num2]'], expr_str='[num0]*[num1]/[num2]')]
[2022-09-12T19:02:59.034370+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 15.0000000000000000000000000
[2022-09-12T19:02:59.034407+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 15
[2022-09-12T19:02:59.054816+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 17
[2022-09-12T19:02:59.054909+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 教室的长是[num0][rk5][int]米，宽是[num1][rk4][int]米，高是[num2][rk2][float]米，现在要粉刷教室[num3][rk3][int]周的墙壁，扣除门窗的面积[num4][rk6][int]平方米，要粉刷的面积=多少平方米？如果每[num5][rk1][int]平方米用涂料[num6][rk0][int]千克，粉刷这个教室共需涂料多少千克？
[2022-09-12T19:02:59.054987+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num1]', '+', '[num0]', '*', '[num2]', '*', '[num6]', '-', '[num4]'], expr_str='[num0]*[num1]+[num0]*[num2]*[num6]-[num4]')]
[2022-09-12T19:02:59.055062+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=9, expr_toks=['[num0]', '*', '[num2]', '+', '[num1]', '*', '[num2]'], expr_str='[num0]*[num2]+[num1]*[num2]'), OpList(arg0=10, expr_toks=['[num9]', '*', '[num5]', '-', '[num4]'], expr_str='[num9]*[num5]-[num4]'), OpList(arg0=11, expr_toks=['[num10]', '/', '[num5]', '*', '[num6]'], expr_str='[num10]/[num5]*[num6]')]
[2022-09-12T19:02:59.055101+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 60.0
[2022-09-12T19:02:59.055137+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 41.0
[2022-09-12T19:02:59.070542+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 18
[2022-09-12T19:02:59.070636+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 王华和张强两人骑自行车同时从两地相对出发，王华骑到全程的[num0][rk0][frac]与张强相遇，张强继续以每小时[num1][rk2][int]千米的速度向前骑，用[num2][rk1][float]小时骑完余下的路程，求王华的速度．
[2022-09-12T19:02:59.070721+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num1]', '*', '[num2]', '/', '[num0]'], expr_str='[num1]*[num2]/[num0]')]
[2022-09-12T19:02:59.070788+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num3]', '-', '[num0]'], expr_str='[num3]-[num0]'), OpList(arg0=6, expr_toks=['[num5]', '/', '[num0]'], expr_str='[num5]/[num0]'), OpList(arg0=7, expr_toks=['[num1]', '/', '[num6]'], expr_str='[num1]/[num6]')]
[2022-09-12T19:02:59.070828+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 48
[2022-09-12T19:02:59.070864+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 2E+1
[2022-09-12T19:02:59.096779+0800]-[INFO] recursion_trainer.py-evaluate-152: i: 19
[2022-09-12T19:02:59.096873+0800]-[INFO] recursion_trainer.py-evaluate-153: input_text: 饲养场养了[num0][rk1][int]只公鸡，[num1][rk2][int]只母鸡，平均每只卖[num2][rk0][int]元，一共卖多少元钱？
[2022-09-12T19:02:59.096964+0800]-[INFO] recursion_trainer.py-evaluate-154: output_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T19:02:59.097032+0800]-[INFO] recursion_trainer.py-evaluate-155: target_Op_list: [OpList(arg0=5, expr_toks=['[num0]', '+', '[num1]'], expr_str='[num0]+[num1]'), OpList(arg0=6, expr_toks=['[num5]', '*', '[num2]'], expr_str='[num5]*[num2]')]
[2022-09-12T19:02:59.097070+0800]-[INFO] recursion_trainer.py-evaluate-156: output_value: 18375
[2022-09-12T19:02:59.097105+0800]-[INFO] recursion_trainer.py-evaluate-157: target_value: 18375
[2022-09-12T19:03:21.312195+0800]-[INFO] recursion_trainer.py-evaluate-166: epoch: 99 val_acc: 0.84
[2022-09-12T19:03:23.824209+0800]-[INFO] train_recursion.py-train_solver-50: [finish train solver]
